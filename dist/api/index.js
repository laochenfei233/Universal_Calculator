(()=>{var e={24:e=>{const t=[{min:0,max:36e3,rate:.03,quickDeduction:0},{min:36e3,max:144e3,rate:.1,quickDeduction:2520},{min:144e3,max:3e5,rate:.2,quickDeduction:16920},{min:3e5,max:42e4,rate:.25,quickDeduction:31920},{min:42e4,max:66e4,rate:.3,quickDeduction:52920},{min:66e4,max:96e4,rate:.35,quickDeduction:85920},{min:96e4,max:1/0,rate:.45,quickDeduction:181920}],r=[{min:0,max:3e3,rate:.03,quickDeduction:0},{min:3e3,max:12e3,rate:.1,quickDeduction:210},{min:12e3,max:25e3,rate:.2,quickDeduction:1410},{min:25e3,max:35e3,rate:.25,quickDeduction:2660},{min:35e3,max:55e3,rate:.3,quickDeduction:4410},{min:55e3,max:8e4,rate:.35,quickDeduction:7160},{min:8e4,max:1/0,rate:.45,quickDeduction:15160}],a={2024:5e3,2023:5e3,2022:5e3,2021:5e3,2020:5e3,2019:5e3,2018:5e3},n={childEducation:{name:"子女教育",maxAmount:1e3,description:"纳税人的子女接受全日制学历教育的相关支出",conditions:["子女年满3岁至博士研究生毕业"]},continuingEducation:{name:"继续教育",maxAmount:400,description:"纳税人在中国境内接受学历（学位）继续教育的支出",conditions:["学历教育期间","取得相关职业资格证书的年度"]},medicalExpenses:{name:"大病医疗",maxAmount:8e4,minAmount:15e3,description:"纳税人在一个纳税年度内发生的医药费用支出",conditions:["超过15000元的部分","最高不超过80000元"]},housingLoanInterest:{name:"住房贷款利息",maxAmount:1e3,description:"纳税人本人或配偶购买中国境内住房发生的首套住房贷款利息支出",conditions:["首套住房贷款","最长不超过240个月"]},housingRent:{name:"住房租金",amounts:{tier1:1500,tier2:1100,tier3:800},description:"纳税人在主要工作城市没有自有住房而发生的住房租金支出",conditions:["在主要工作城市没有自有住房","与住房贷款利息不能同时扣除"]},elderCare:{name:"赡养老人",maxAmount:2e3,description:"纳税人赡养一位及以上被赡养人的赡养支出",conditions:["被赡养人年满60岁","独生子女按每月2000元扣除","非独生子女与兄弟姐妹分摊每月2000元"]},infantCare:{name:"3岁以下婴幼儿照护",maxAmount:1e3,description:"纳税人照护3岁以下婴幼儿子女的相关支出",conditions:["从婴幼儿出生的当月至满3周岁的前一个月"]}},s={beijing:{pensionInsurance:{rate:.08,maxBase:33891,minBase:5869},medicalInsurance:{rate:.02,maxBase:33891,minBase:5869},unemploymentInsurance:{rate:.005,maxBase:33891,minBase:5869},housingFund:{rate:.12,maxBase:33891,minBase:2420}},national:{pensionInsurance:{rate:.08,maxBase:3e4,minBase:3e3},medicalInsurance:{rate:.02,maxBase:3e4,minBase:3e3},unemploymentInsurance:{rate:.005,maxBase:3e4,minBase:3e3},housingFund:{rate:.12,maxBase:3e4,minBase:2e3}}};e.exports={TAX_BRACKETS_2024:t,MONTHLY_TAX_BRACKETS_2024:r,BASIC_DEDUCTION:a,SPECIAL_DEDUCTIONS:n,SOCIAL_INSURANCE_LIMITS:s,BONUS_TAX_METHODS:{separate:{name:"单独计税",description:"年终奖除以12个月，按对应税率计算",available:!0},combined:{name:"并入综合所得",description:"年终奖并入当年综合所得一并计算纳税",available:!0}},getBasicDeduction:(e=(new Date).getFullYear())=>a[e]||a[2024],getMonthlyTaxBrackets:()=>r,getAnnualTaxBrackets:()=>t,getSpecialDeductions:()=>n,getSocialInsuranceLimits:(e="national")=>s[e]||s.national}},39:(e,t,r)=>{const a=r(24);e.exports=class{static calculateMonthlySalaryTax(e){const{salary:t,socialInsurance:r=0,housingFund:n=0,specialDeductions:s={},year:i=(new Date).getFullYear()}=e,o=a.getBasicDeduction(i),c=this.calculateSpecialDeductions(s),l=Math.max(0,t-o-r-n-c.total),u=this.calculateTaxByBrackets(l,a.getMonthlyTaxBrackets()),m=t-u-r-n;return{grossSalary:t,taxableIncome:l,tax:Math.round(100*u)/100,afterTaxIncome:Math.round(100*m)/100,deductions:{basicDeduction:o,socialInsurance:r,housingFund:n,specialDeductions:c,totalDeductions:o+r+n+c.total},effectiveTaxRate:t>0?Math.round(u/t*1e4)/100:0,marginalTaxRate:this.getMarginalTaxRate(l,a.getMonthlyTaxBrackets())}}static calculateAnnualTax(e){const{annualSalary:t,annualBonus:r=0,otherIncome:n=0,annualSocialInsurance:s=0,annualHousingFund:i=0,specialDeductions:o={},bonusTaxMethod:c="combined",year:l=(new Date).getFullYear()}=e,u=12*a.getBasicDeduction(l),m=this.calculateSpecialDeductions(o,!0);let h=0,d={};if("separate"===c&&r>0){const e=Math.max(0,t+n-u-s-i-m.total),o=this.calculateTaxByBrackets(e,a.getAnnualTaxBrackets()),c=this.calculateBonusTaxSeparate(r);h=o+c,d={salaryTax:Math.round(100*o)/100,bonusTax:Math.round(100*c)/100,method:"separate"}}else{const e=Math.max(0,t+r+n-u-s-i-m.total);h=this.calculateTaxByBrackets(e,a.getAnnualTaxBrackets()),d={totalTax:Math.round(100*h)/100,method:"combined"}}const p=t+r+n,g=p-h-s-i;return{grossIncome:p,taxableIncome:Math.max(0,p-u-s-i-m.total),tax:Math.round(100*h)/100,afterTaxIncome:Math.round(100*g)/100,taxDetails:d,deductions:{basicDeduction:u,socialInsurance:s,housingFund:i,specialDeductions:m,totalDeductions:u+s+i+m.total},effectiveTaxRate:p>0?Math.round(h/p*1e4)/100:0}}static calculateTaxByBrackets(e,t){if(e<=0)return 0;for(const r of t)if(e>=r.min&&e<=r.max)return e*r.rate-r.quickDeduction;const r=t[t.length-1];return e*r.rate-r.quickDeduction}static calculateBonusTaxSeparate(e){if(e<=0)return 0;const t=e/12,r=a.getMonthlyTaxBrackets();for(const a of r)if(t>=a.min&&t<=a.max)return e*a.rate-a.quickDeduction;const n=r[r.length-1];return e*n.rate-n.quickDeduction}static calculateSpecialDeductions(e,t=!1){const r=a.getSpecialDeductions(),n={items:{},total:0},s=t?12:1;if(e.childEducation&&e.childEducation.count>0){const t=Math.min(e.childEducation.count*r.childEducation.maxAmount*s,e.childEducation.amount||e.childEducation.count*r.childEducation.maxAmount*s);n.items.childEducation={name:r.childEducation.name,amount:t,count:e.childEducation.count},n.total+=t}if(e.continuingEducation&&e.continuingEducation.amount>0){const t=r.continuingEducation.maxAmount*s,a=Math.min(e.continuingEducation.amount,t);n.items.continuingEducation={name:r.continuingEducation.name,amount:a},n.total+=a}if(t&&e.medicalExpenses&&e.medicalExpenses.amount>r.medicalExpenses.minAmount){const t=Math.min(e.medicalExpenses.amount-r.medicalExpenses.minAmount,r.medicalExpenses.maxAmount);n.items.medicalExpenses={name:r.medicalExpenses.name,amount:t},n.total+=t}if(e.housingLoanInterest&&e.housingLoanInterest.amount>0){const t=r.housingLoanInterest.maxAmount*s,a=Math.min(e.housingLoanInterest.amount,t);n.items.housingLoanInterest={name:r.housingLoanInterest.name,amount:a},n.total+=a}if(e.housingRent&&e.housingRent.amount>0){const t=e.housingRent.cityTier||"tier3",a=r.housingRent.amounts[t]*s,i=Math.min(e.housingRent.amount,a);n.items.housingRent={name:r.housingRent.name,amount:i,cityTier:t},n.total+=i}if(e.elderCare&&e.elderCare.amount>0){const t=r.elderCare.maxAmount*s,a=Math.min(e.elderCare.amount,t);n.items.elderCare={name:r.elderCare.name,amount:a},n.total+=a}if(e.infantCare&&e.infantCare.count>0){const t=Math.min(e.infantCare.count*r.infantCare.maxAmount*s,e.infantCare.amount||e.infantCare.count*r.infantCare.maxAmount*s);n.items.infantCare={name:r.infantCare.name,amount:t,count:e.infantCare.count},n.total+=t}return n}static getMarginalTaxRate(e,t){if(e<=0)return 0;for(const r of t)if(e>=r.min&&e<=r.max)return 100*r.rate;return 100*t[t.length-1].rate}static calculateSocialInsurance(e){const{salary:t,city:r="national",customRates:n={}}=e,s=a.getSocialInsuranceLimits(r),i={items:{},total:0};return Object.keys(s).forEach(e=>{const r=s[e],a=n[e]||r.rate,o=Math.min(Math.max(t,r.minBase),r.maxBase),c=Math.round(o*a*100)/100;i.items[e]={name:this.getSocialInsuranceName(e),base:o,rate:100*a,amount:c},i.total+=c}),i.total=Math.round(100*i.total)/100,i}static getSocialInsuranceName(e){return{pensionInsurance:"养老保险",medicalInsurance:"医疗保险",unemploymentInsurance:"失业保险",housingFund:"住房公积金"}[e]||e}static getTaxOptimizationSuggestions(e){const t=[],{deductions:r,effectiveTaxRate:a,marginalTaxRate:n}=e;return(!r.specialDeductions||r.specialDeductions.total<2e3)&&t.push({type:"specialDeductions",title:"完善专项扣除申报",description:"建议完善子女教育、住房租金/贷款利息、赡养老人等专项扣除申报，可有效降低税负",priority:"high"}),n>10&&t.push({type:"bonusMethod",title:"优化年终奖计税方式",description:"建议对比年终奖单独计税和并入综合所得计税两种方式，选择税负较低的方案",priority:"medium"}),t.push({type:"socialInsurance",title:"合理规划社保公积金缴费",description:"在政策允许范围内，适当提高公积金缴费比例可以减少应纳税所得额",priority:"low"}),t}}},44:e=>{e.exports={apm:{enabled:"true"===process.env.APM_ENABLED,serviceName:"calculator",serverUrl:process.env.APM_SERVER_URL||"http://localhost:8200",environment:"production"},healthChecks:{path:"/health",interval:5e3,timeout:3e3},logCollection:{enabled:"true"===process.env.LOG_COLLECTION_ENABLED,type:process.env.LOG_COLLECTION_TYPE||"elasticsearch",endpoint:process.env.LOG_COLLECTION_ENDPOINT,index:process.env.LOG_COLLECTION_INDEX||"calculator-logs"},metrics:{enabled:"true"===process.env.METRICS_ENABLED,port:process.env.METRICS_PORT||9090,path:"/metrics",collectDefaultMetrics:!0,timeout:5e3},alerts:{enabled:"true"===process.env.ALERTS_ENABLED,providers:{email:{enabled:"true"===process.env.EMAIL_ALERTS_ENABLED,recipients:process.env.EMAIL_RECIPIENTS?process.env.EMAIL_RECIPIENTS.split(","):["devops@example.com"]},slack:{enabled:"true"===process.env.SLACK_ALERTS_ENABLED,webhookUrl:process.env.SLACK_WEBHOOK_URL}}}}},47:e=>{e.exports=class{static validateNumber(e,t="value"){if(null==e||""===e)return{isValid:!1,error:`${t}不能为空`};const r=Number(e);return isNaN(r)||!isFinite(r)?{isValid:!1,error:`${t}必须是有效数字`}:{isValid:!0,value:r}}static validateRange(e,t,r,a="value"){return e<t||e>r?{isValid:!1,error:`${a}必须在${t}到${r}之间`}:{isValid:!0}}static validatePositive(e,t="value"){return e<=0?{isValid:!1,error:`${t}必须大于0`}:{isValid:!0}}static validateRequired(e,t="field"){return null==e||""===e?{isValid:!1,error:`${t}不能为空`}:{isValid:!0}}static validateExpression(e){if(!e||"string"!=typeof e)return{isValid:!1,error:"表达式不能为空"};const t=[/eval\s*\(/i,/function\s*\(/i,/=>/,/import\s+/i,/require\s*\(/i,/process\./i,/global\./i,/__/,/\$\{/];for(const r of t)if(r.test(e))return{isValid:!1,error:"表达式包含不安全的内容"};return/^[0-9+\-*/().\s,^%abcdefghijklmnopqrstuvwxyzπe]+$/i.test(e)?{isValid:!0}:{isValid:!1,error:"表达式包含不支持的字符"}}static validateBatch(e){const t=[];for(const r of e){const e=r();e.isValid||t.push(e.error)}return{isValid:0===t.length,errors:t}}}},67:e=>{const t=new class{constructor(){this.history=[],this.maxEntries=1e3,this.nextId=1}addEntry(e){const t={id:this.nextId++,expression:e.expression,result:e.result,type:e.type||"basic",timestamp:e.timestamp||new Date,duration:e.duration||0};return this.history.unshift(t),this.history.length>this.maxEntries&&(this.history=this.history.slice(0,this.maxEntries)),t}getHistory(e={}){const{limit:t=10,offset:r=0,type:a,startDate:n,endDate:s}=e;let i=[...this.history];a&&(i=i.filter(e=>e.type===a)),n&&(i=i.filter(e=>e.timestamp>=n)),s&&(i=i.filter(e=>e.timestamp<=s));const o=i.length;return{entries:i.slice(r,r+t),total:o,hasMore:r+t<o}}getEntry(e){return this.history.find(t=>t.id===parseInt(e))||null}deleteEntry(e){const t=this.history.findIndex(t=>t.id===parseInt(e));return-1!==t&&(this.history.splice(t,1),!0)}clearHistory(){this.history=[],this.nextId=1}getStatistics(){const e=this.history.length,t={};let r=0;this.history.forEach(e=>{t[e.type]=(t[e.type]||0)+1,r+=e.duration||0});const a=e>0?r/e:0;return{totalCalculations:e,typeStats:t,avgDuration:Math.round(100*a)/100,oldestEntry:this.history[this.history.length-1]?.timestamp,newestEntry:this.history[0]?.timestamp}}searchHistory(e,t={}){const{limit:r=50}=t;if(!e||"string"!=typeof e)return[];const a=e.toLowerCase();return this.history.filter(e=>e.expression.toLowerCase().includes(a)||e.result.toString().includes(a)).slice(0,r)}exportHistory(e="json"){switch(e.toLowerCase()){case"json":return JSON.stringify(this.history,null,2);case"csv":return 0===this.history.length?"ID,Expression,Result,Type,Timestamp,Duration\n":"ID,Expression,Result,Type,Timestamp,Duration\n"+this.history.map(e=>[e.id,`"${e.expression}"`,e.result,e.type,e.timestamp.toISOString(),e.duration].join(",")).join("\n");default:throw new Error(`不支持的导出格式: ${e}`)}}importHistory(e,t="json"){let r=[];try{if("json"!==t.toLowerCase())throw new Error(`不支持的导入格式: ${t}`);if(r=JSON.parse(e),!Array.isArray(r))throw new Error("导入数据格式错误");let a=0;return r.forEach(e=>{e.expression&&void 0!==e.result&&(this.addEntry({expression:e.expression,result:e.result,type:e.type||"basic",timestamp:e.timestamp?new Date(e.timestamp):new Date,duration:e.duration||0}),a++)}),a}catch(e){throw new Error(`导入失败: ${e.message}`)}}};e.exports=t},124:(e,t,r)=>{const a=r(531),{ERROR_TYPES:n,HTTP_STATUS:s}=r(130),i=r(484);e.exports={errorHandler:(e,t,r,o)=>{const c=generateErrorId(),l=(new Date).toISOString();return i.error("Error occurred:",{errorId:c,message:e.message,stack:e.stack,url:t.url,method:t.method,ip:t.ip,userAgent:t.get("User-Agent"),timestamp:l}),"ValidationError"===e.name?a.validationError(r,e.details,c):"SyntaxError"===e.name&&e.message.includes("JSON")?a.error(r,"请求格式错误，请检查JSON格式",n.INVALID_INPUT,s.BAD_REQUEST,{errorId:c}):"MongoError"===e.name||"SequelizeError"===e.name?a.error(r,"数据库操作失败",n.DATABASE_ERROR,s.INTERNAL_SERVER_ERROR,{errorId:c}):"ECONNREFUSED"===e.code||"ETIMEDOUT"===e.code?a.error(r,"网络连接失败，请稍后重试",n.NETWORK_ERROR,s.INTERNAL_SERVER_ERROR,{errorId:c}):"JsonWebTokenError"===e.name||"TokenExpiredError"===e.name?a.error(r,"身份验证失败",n.AUTHENTICATION_ERROR,s.UNAUTHORIZED,{errorId:c}):e.isBusinessError?a.error(r,e.message,e.errorType||n.BUSINESS_ERROR,e.statusCode||s.BAD_REQUEST,{errorId:c,...e.details}):a.error(r,"服务器内部错误，请联系管理员",n.INTERNAL_ERROR,s.INTERNAL_SERVER_ERROR,{errorId:c})},notFoundHandler:(e,t)=>{a.error(t,`路径 ${e.originalUrl} 不存在`,n.NOT_FOUND,404)},asyncHandler:e=>(t,r,a)=>{Promise.resolve(e(t,r,a)).catch(a)}}},127:(e,t,r)=>{const a=r(252),n=(r(577),r(928)),s=r(604),{errorHandler:i,notFoundHandler:o}=(r(743),r(124)),{sqlInjectionProtection:c,xssProtection:l,inputValidation:u,securityHeaders:m,corsConfig:h,enhancedRateLimit:d}=r(643),p=r(839),g=a();g.set("trust proxy",1),g.use(m),g.use(h),g.use(a.json({limit:"10mb"})),g.use(a.urlencoded({extended:!0,limit:"10mb"})),g.use(s),g.use(c),g.use(l),g.use(u),g.use("/api",d);const y=n.join(__dirname,"public");g.use(a.static(y)),g.use("/api",p),g.get("/",(e,t)=>{const r=n.join(__dirname,"public","index.html");t.sendFile(r)}),g.use(o),g.use(i),e.exports=g},130:e=>{e.exports={HTTP_STATUS:{OK:200,BAD_REQUEST:400,UNAUTHORIZED:401,FORBIDDEN:403,NOT_FOUND:404,INTERNAL_SERVER_ERROR:500},ERROR_TYPES:{CALCULATION_ERROR:"CALCULATION_ERROR",INVALID_INPUT:"INVALID_INPUT",FORMULA_SYNTAX_ERROR:"FORMULA_SYNTAX_ERROR",CONVERSION_ERROR:"CONVERSION_ERROR",UNIT_CONVERSION_ERROR:"UNIT_CONVERSION_ERROR",RELATIONSHIP_NOT_FOUND:"RELATIONSHIP_NOT_FOUND",VALIDATION_ERROR:"VALIDATION_ERROR",DATABASE_ERROR:"DATABASE_ERROR",NETWORK_ERROR:"NETWORK_ERROR",AUTHENTICATION_ERROR:"AUTHENTICATION_ERROR",AUTHORIZATION_ERROR:"AUTHORIZATION_ERROR",BUSINESS_ERROR:"BUSINESS_ERROR",INTERNAL_ERROR:"INTERNAL_ERROR",RATE_LIMIT_EXCEEDED:"RATE_LIMIT_EXCEEDED"},CALCULATOR_TYPES:{BASIC:"basic",SCIENTIFIC:"scientific",CONVERTER:"converter",TAX:"tax",MORTGAGE:"mortgage",BMI:"bmi",RELATIONSHIP:"relationship",NUMBER_CONVERTER:"number_converter",CUSTOM:"custom"},CACHE:{DEFAULT_TTL:300,MAX_ENTRIES:1e3},RATE_LIMIT:{WINDOW_MS:9e5,MAX_REQUESTS:100,WHITELIST:["127.0.0.1","::1"],BLACKLIST:[]},SECURITY:{CORS:{ALLOWED_ORIGINS:process.env.CORS_ALLOWED_ORIGINS?process.env.CORS_ALLOWED_ORIGINS.split(","):["http://localhost:3000","http://127.0.0.1:3000"],ALLOWED_METHODS:["GET","POST","PUT","DELETE","OPTIONS"],ALLOWED_HEADERS:["Content-Type","Authorization","X-Requested-With"],CREDENTIALS:!0,MAX_AGE:86400},SECURITY_HEADERS:{"X-Content-Type-Options":"nosniff","X-Frame-Options":"DENY","X-XSS-Protection":"1; mode=block","Strict-Transport-Security":"max-age=31536000; includeSubDomains","Content-Security-Policy":"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;","Referrer-Policy":"strict-origin-when-cross-origin"},INPUT_VALIDATION:{MAX_STRING_LENGTH:1e3,MAX_NUMBER_VALUE:1e15,MIN_NUMBER_VALUE:-1e15,MAX_ARRAY_LENGTH:100,MAX_OBJECT_DEPTH:10},PASSWORD_POLICY:{MIN_LENGTH:8,REQUIRE_UPPERCASE:!0,REQUIRE_LOWERCASE:!0,REQUIRE_NUMBERS:!0,REQUIRE_SPECIAL_CHARS:!0,MAX_AGE_DAYS:90}},LOGGING:{LEVEL:process.env.LOG_LEVEL||"info",FILE_SIZE:"20m",RETAIN_DAYS:30,AUDIT_RETAIN_DAYS:90}}},142:e=>{"use strict";e.exports=require("selfsigned")},168:(e,t,r)=>{const{CACHE:a}=r(130);class n{constructor(){this.cache=new Map,this.timers=new Map}set(e,t,r=a.DEFAULT_TTL){if(this.timers.has(e)&&clearTimeout(this.timers.get(e)),this.cache.size>=a.MAX_ENTRIES&&!this.cache.has(e)){const e=this.cache.keys().next().value;this.delete(e)}this.cache.set(e,{value:t,createdAt:Date.now(),ttl:1e3*r});const n=setTimeout(()=>{this.delete(e)},1e3*r);this.timers.set(e,n)}get(e){const t=this.cache.get(e);return t?Date.now()-t.createdAt>t.ttl?(this.delete(e),null):t.value:null}delete(e){this.cache.delete(e),this.timers.has(e)&&(clearTimeout(this.timers.get(e)),this.timers.delete(e))}clear(){for(const e of this.timers.values())clearTimeout(e);this.cache.clear(),this.timers.clear()}getStats(){return{size:this.cache.size,maxSize:a.MAX_ENTRIES,keys:Array.from(this.cache.keys())}}static generateKey(e,t){return`${e}:${Object.keys(t).sort().map(e=>`${e}:${t[e]}`).join("|")}`}}const s=new n;e.exports={CacheUtil:n,globalCache:s}},170:e=>{e.exports=class{static calculateEqualPayment(e){const{principal:t,rate:r,years:a,includeSchedule:n=!1}=e,s=r/100/12,i=12*a,o=t*s*Math.pow(1+s,i)/(Math.pow(1+s,i)-1),c=o*i,l=c-t,u={type:"等额本息",monthlyPayment:Math.round(100*o)/100,totalPayment:Math.round(100*c)/100,totalInterest:Math.round(100*l)/100,principal:t,rate:r,years:a,months:i,averageMonthlyInterest:Math.round(l/i*100)/100,interestRate:Math.round(l/t*1e4)/100};return n&&(u.schedule=this.generateEqualPaymentSchedule(t,s,i,o)),u}static calculateEqualPrincipal(e){const{principal:t,rate:r,years:a,includeSchedule:n=!1}=e,s=r/100/12,i=12*a,o=t/i,c=o+t*s,l=o+o*s,u=t*s*(i+1)/2,m=t+u,h={type:"等额本金",firstPayment:Math.round(100*c)/100,lastPayment:Math.round(100*l)/100,monthlyPrincipal:Math.round(100*o)/100,totalPayment:Math.round(100*m)/100,totalInterest:Math.round(100*u)/100,principal:t,rate:r,years:a,months:i,averageMonthlyPayment:Math.round((c+l)/2*100)/100,interestRate:Math.round(u/t*1e4)/100};return n&&(h.schedule=this.generateEqualPrincipalSchedule(t,s,i,o)),h}static generateEqualPaymentSchedule(e,t,r,a){const n=[];let s=e;for(let i=1;i<=r;i++){const o=s*t,c=a-o;s-=c,i===r&&(s=0),n.push({month:i,monthlyPayment:Math.round(100*a)/100,principalPayment:Math.round(100*c)/100,interestPayment:Math.round(100*o)/100,remainingPrincipal:Math.round(100*Math.max(0,s))/100,cumulativePrincipal:Math.round(100*(e-s))/100,cumulativeInterest:Math.round(100*(a*i-(e-s)))/100})}return n}static generateEqualPrincipalSchedule(e,t,r,a){const n=[];let s=e,i=0;for(let o=1;o<=r;o++){const c=s*t,l=a+c;s-=a,i+=c,o===r&&(s=0),n.push({month:o,monthlyPayment:Math.round(100*l)/100,principalPayment:Math.round(100*a)/100,interestPayment:Math.round(100*c)/100,remainingPrincipal:Math.round(100*Math.max(0,s))/100,cumulativePrincipal:Math.round(100*(e-s))/100,cumulativeInterest:Math.round(100*i)/100})}return n}static calculatePrepayment(e){const{principal:t,rate:r,years:a,type:n,prepaymentAmount:s,prepaymentMonth:i,prepaymentType:o="reduce_term"}=e,c="equal"===n?this.calculateEqualPayment({principal:t,rate:r,years:a,includeSchedule:!0}):this.calculateEqualPrincipal({principal:t,rate:r,years:a,includeSchedule:!0}),l=c.schedule.slice(0,i-1),u=1===i?t:c.schedule[i-2].remainingPrincipal;if(s>=u)return{error:"提前还款金额不能大于或等于剩余本金",remainingPrincipal:u};const m=u-s,h=c.months-i+1,d=r/100/12;let p;if("reduce_term"===o)if("equal"===n){const e=c.monthlyPayment,t=Math.ceil(Math.log(1+m*d/e)/Math.log(1+d));p=this.calculateEqualPayment({principal:m,rate:r,years:t/12,includeSchedule:!0}),p.reducedMonths=h-t,p.reducedYears=Math.round(p.reducedMonths/12*100)/100}else{const e=c.monthlyPrincipal,t=Math.ceil(m/e);p=this.calculateEqualPrincipal({principal:m,rate:r,years:t/12,includeSchedule:!0}),p.reducedMonths=h-t,p.reducedYears=Math.round(p.reducedMonths/12*100)/100}else{p="equal"===n?this.calculateEqualPayment({principal:m,rate:r,years:h/12,includeSchedule:!0}):this.calculateEqualPrincipal({principal:m,rate:r,years:h/12,includeSchedule:!0});const e="equal"===n?c.monthlyPayment:c.schedule[i-1].monthlyPayment;p.monthlyPaymentReduction=Math.round(100*(e-("equal"===n?p.monthlyPayment:p.firstPayment)))/100}const g=c.schedule.slice(i-1).reduce((e,t)=>e+t.interestPayment,0),y=Math.round(100*(g-p.totalInterest))/100;return{prepaymentAmount:s,prepaymentMonth:i,prepaymentType:o,originalLoan:{totalInterest:c.totalInterest,totalPayment:c.totalPayment,remainingInterest:Math.round(100*g)/100,remainingPayment:Math.round(100*(u+g))/100},newLoan:p,savings:{interestSaved:y,totalSaved:Math.round(100*(y+s))/100,paymentReduction:p.monthlyPaymentReduction||0,termReduction:{months:p.reducedMonths||0,years:p.reducedYears||0}},beforePrepayment:l,afterPrepayment:p.schedule}}static comparePaymentMethods(e){const{principal:t,rate:r,years:a}=e,n=this.calculateEqualPayment({principal:t,rate:r,years:a}),s=this.calculateEqualPrincipal({principal:t,rate:r,years:a}),i=n.totalInterest-s.totalInterest,o=n.monthlyPayment-s.firstPayment;return{equalPayment:{...n,pros:["月供固定，便于规划","初期还款压力较小"],cons:["总利息较高","前期还本金较少"]},equalPrincipal:{...s,pros:["总利息较少","还款压力逐月递减"],cons:["初期还款压力大","月供不固定"]},comparison:{interestDifference:Math.round(100*i)/100,initialPaymentDifference:Math.round(100*o)/100,recommendation:i>0?"equalPrincipal":"equalPayment",analysis:{interestSavings:Math.round(100*Math.abs(i))/100,percentageSavings:Math.round(Math.abs(i)/n.totalInterest*1e4)/100}}}}static calculateAffordability(e){const{monthlyIncome:t,monthlyExpenses:r=0,rate:a,years:n,debtToIncomeRatio:s=.5}=e,i=t-r,o=Math.min(.7*i,t*s),c=a/100/12,l=12*n,u=o*(Math.pow(1+c,l)-1)/(c*Math.pow(1+c,l));return{monthlyIncome:t,monthlyExpenses:r,availableIncome:Math.round(100*i)/100,maxMonthlyPayment:Math.round(100*o)/100,maxLoanAmount:Math.round(100*u)/100,debtToIncomeRatio:Math.round(o/t*1e4)/100,recommendations:{conservative:Math.round(.8*u*100)/100,moderate:Math.round(.9*u*100)/100,aggressive:Math.round(100*u)/100},riskAssessment:this.assessRisk(o/t)}}static assessRisk(e){return e<=.3?{level:"low",description:"低风险",advice:"还款压力较小，财务状况良好"}:e<=.5?{level:"medium",description:"中等风险",advice:"还款压力适中，建议预留应急资金"}:{level:"high",description:"高风险",advice:"还款压力较大，建议降低贷款金额或延长还款期限"}}static generateScheduleSummary(e,t=12){const r=[];for(let a=0;a<e.length;a+=t){const n=e.slice(a,a+t),s={year:Math.floor(a/t)+1,startMonth:n[0].month,endMonth:n[n.length-1].month,totalPayment:Math.round(100*n.reduce((e,t)=>e+t.monthlyPayment,0))/100,totalPrincipal:Math.round(100*n.reduce((e,t)=>e+t.principalPayment,0))/100,totalInterest:Math.round(100*n.reduce((e,t)=>e+t.interestPayment,0))/100,remainingPrincipal:n[n.length-1].remainingPrincipal};r.push(s)}return r}}},233:e=>{"use strict";e.exports=require("winston-daily-rotate-file")},238:(e,t,r)=>{const{BASIC_RELATIONS:a,RELATIONSHIP_MAP:n,REVERSE_RELATIONSHIP_MAP:s,REGIONAL_VARIATIONS:i}=r(563);e.exports=class{constructor(){this.cache=new Map}calculateRelationship(e,t="male",r="standard"){if(!Array.isArray(e)||0===e.length)return{success:!1,error:"关系路径不能为空",path:e,gender:t,region:r};const a=`${e.join("-")}-${t}-${r}`;if(this.cache.has(a))return this.cache.get(a);try{this.validatePath(e);const n=this.resolvePath(e,t,r);return this.cache.set(a,n),n}catch(n){const s={success:!1,error:n.message,path:e,gender:t,region:r};return this.cache.set(a,s),s}}validatePath(e){for(const t of e){const e=this.normalizeRelation(t);if(!a[e])throw new Error(`未知的关系: ${t}`)}}normalizeRelation(e){const t=a[e];return t&&t.alias?t.alias:e}resolvePath(e,t,r){if(1===e.length)return this.getDirectRelation(e[0],t,r);let a=this.normalizeRelation(e[0]),s=[a];for(let r=1;r<e.length;r++){const i=this.normalizeRelation(e[r]);if(n[a]&&n[a][i]){const e=n[a][i];a=e[t]||e.male,s.push(a)}else{const e=this.findIntermediateRelation(a,i);if(!e)throw new Error(`无法解析关系路径: ${a} -> ${i}`);a=e,s.push(`${a}(通过${i})`)}}const i=this.applyRegionalVariation(a,r);return{success:!0,result:i,originalPath:e,resolvedSteps:s,gender:t,region:r,explanation:this.generateExplanation(e,i)}}getDirectRelation(e,t,r){const a=this.normalizeRelation(e),n=this.applyRegionalVariation(a,r);return{success:!0,result:n,originalPath:[e],resolvedSteps:[n],gender:t,region:r,explanation:`直接关系: ${n}`}}findIntermediateRelation(e,t){return null}applyRegionalVariation(e,t){return"standard"!==t&&i[t]&&i[t].variations[e]||e}generateExplanation(e,t){return 1===e.length?`直接关系: ${t}`:`${e.join("的")}称为${t}`}reverseQuery(e,t="standard"){let r=e;if("standard"!==t&&i[t]){const a=i[t].variations;for(const[t,n]of Object.entries(a))if(n===e){r=t;break}}const a=s[r]||[];return{success:!0,targetRelation:e,possiblePaths:a,region:t,explanation:a.length>0?`"${e}"可能的关系路径有${a.length}种`:`未找到"${e}"的关系路径`}}validateRelationship(e,t,r="male",a="standard"){try{const n=this.calculateRelationship(e,r,a);if(!n.success)return{valid:!1,error:n.error,path:e,expectedResult:t};const s=n.result===t;return{valid:s,actualResult:n.result,expectedResult:t,path:e,explanation:s?"关系路径验证正确":`关系路径验证失败，实际结果为: ${n.result}`}}catch(r){return{valid:!1,error:r.message,path:e,expectedResult:t}}}getSupportedRelations(){return Object.keys(a)}getSupportedRegions(){return Object.keys(i).map(e=>({key:e,name:i[e].name}))}clearCache(){this.cache.clear()}}},252:e=>{"use strict";e.exports=require("express")},324:(e,t,r)=>{const{UNIT_CATEGORIES:a,isValidUnit:n,getUnitInfo:s}=r(547);function i(e,t,r,i){if("number"!=typeof e||isNaN(e))throw new Error("输入值必须是有效数字");if(!a[i])throw new Error(`不支持的单位类别: ${i}`);if(!n(i,t))throw new Error(`无效的源单位: ${t}`);if(!n(i,r))throw new Error(`无效的目标单位: ${r}`);if(t===r)return{originalValue:e,convertedValue:e,fromUnit:t,toUnit:r,category:i,precision:l(e),fromUnitInfo:s(i,t),toUnitInfo:s(i,r)};const u=a[i];let m;if("temperature"===i)m=o(e,t,r);else{const a=u.units[t],n=u.units[r];m=e*a.factor/n.factor}const h=c(m,i);return m=parseFloat(m.toFixed(h)),{originalValue:e,convertedValue:m,fromUnit:t,toUnit:r,category:i,precision:h,fromUnitInfo:s(i,t),toUnitInfo:s(i,r)}}function o(e,t,r){const n=a.temperature.units,s=n[t].toCelsius(e);return n[r].fromCelsius(s)}function c(e,t){const r=Math.abs(e),a={length:{large:2,medium:2,small:6},weight:{large:2,medium:3,small:6},temperature:{large:1,medium:2,small:3},area:{large:2,medium:4,small:8},volume:{large:2,medium:4,small:8},time:{large:0,medium:2,small:3},speed:{large:1,medium:2,small:4}},n=a[t]||a.length;return r>=1e3?n.large:r>=1?n.medium:n.small}function l(e){const t=e.toString(),r=t.indexOf(".");return-1===r?0:t.length-r-1}function u(e,t="zh-CN"){return new Intl.NumberFormat(t,{maximumFractionDigits:10,useGrouping:!0}).format(e)}e.exports={convertUnit:i,convertTemperature:o,convertToMultipleUnits:function(e,t,r,n=[]){if(!a[r])throw new Error(`不支持的单位类别: ${r}`);0===n.length&&(n=Object.keys(a[r].units));const s=[];for(const a of n)if(a!==t)try{const n=i(e,t,a,r);s.push(n)}catch(e){console.warn(`转换到 ${a} 失败:`,e.message)}return s},calculateOptimalPrecision:c,getPrecision:l,validateConversionParams:function(e){const{value:t,fromUnit:r,toUnit:s,category:i}=e,o=[];return null==t?o.push("缺少转换数值"):"number"!=typeof t||isNaN(t)?o.push("转换数值必须是有效数字"):isFinite(t)||o.push("转换数值不能是无穷大"),i?a[i]||o.push(`不支持的单位类别: ${i}`):o.push("缺少单位类别"),r?i&&!n(i,r)&&o.push(`无效的源单位: ${r}`):o.push("缺少源单位"),s?i&&!n(i,s)&&o.push(`无效的目标单位: ${s}`):o.push("缺少目标单位"),{isValid:0===o.length,errors:o}},formatConversionResult:function(e,t={}){const{includeSymbols:r=!0,includeNames:a=!0,locale:n="zh-CN"}=t,s={...e,formattedOriginal:u(e.originalValue,n),formattedConverted:u(e.convertedValue,n)};return r&&(s.fromSymbol=e.fromUnitInfo.symbol,s.toSymbol=e.toUnitInfo.symbol),a&&(s.fromName=e.fromUnitInfo.name,s.toName=e.toUnitInfo.name),s},formatNumber:u}},345:(e,t,r)=>{const{CACHE:a}=r(130);r(531);const n=new class{constructor(){this.cache=new Map,this.hits=0,this.misses=0}generateKey(e,t="basic",r="radians"){return`${t}:${r}:${e}`}get(e){const t=this.cache.get(e);return t&&t.expiresAt>Date.now()?(this.hits++,t.value):(t&&this.cache.delete(e),this.misses++,null)}set(e,t,r=a.DEFAULT_TTL){this.cache.size>=a.MAX_ENTRIES&&this.evictOldest(),this.cache.set(e,{value:t,expiresAt:Date.now()+1e3*r})}delete(e){this.cache.delete(e)}clear(){this.cache.clear(),this.hits=0,this.misses=0}evictOldest(){let e=null,t=1/0;for(const[r,a]of this.cache.entries())a.expiresAt<t&&(e=r,t=a.expiresAt);e&&this.cache.delete(e)}getStats(){return{size:this.cache.size,hits:this.hits,misses:this.misses,hitRate:this.hits+this.misses>0?Math.round(this.hits/(this.hits+this.misses)*100):0}}};e.exports=n},362:e=>{"use strict";e.exports=require("winston")},367:(e,t,r)=>{const a=r(252).Router(),n=r(531),s=r(47),{asyncHandler:i}=r(124),{globalCache:o,CacheUtil:c}=r(168),{convertUnit:l,convertToMultipleUnits:u,validateConversionParams:m,formatConversionResult:h}=r(324),{getSupportedCategories:d,getUnitsForCategory:p}=r(547),g=r(441);a.post("/",i(async(e,t)=>{const{value:r,fromUnit:a,toUnit:s,category:i}=e.body,u=m({value:r,fromUnit:a,toUnit:s,category:i});if(!u.isValid)return n.validationError(t,u.errors);const d=c.generateKey("unit-convert",{value:r,fromUnit:a,toUnit:s,category:i}),p=o.get(d);if(p)return n.success(t,p,"单位换算完成（缓存）");try{const e=l(r,a,s,i),c=h(e,{includeSymbols:!0,includeNames:!0,locale:"zh-CN"});o.set(d,c),n.success(t,c,"单位换算完成")}catch(e){n.calculationError(t,"单位换算失败",e.message)}})),a.post("/batch",i(async(e,t)=>{const{value:r,fromUnit:a,category:i,targetUnits:l}=e.body,m=s.validateBatch([()=>s.validateNumber(r,"转换数值"),()=>s.validateRequired(a,"源单位"),()=>s.validateRequired(i,"单位类别")]);if(!m.isValid)return n.validationError(t,m.errors);const d=c.generateKey("unit-convert-batch",{value:r,fromUnit:a,category:i,targetUnits:l||"all"}),p=o.get(d);if(p)return n.success(t,p,"批量单位换算完成（缓存）");try{const e=u(r,a,i,l).map(e=>h(e,{includeSymbols:!0,includeNames:!0,locale:"zh-CN"})),s={originalValue:r,fromUnit:a,category:i,conversions:e,totalConversions:e.length};o.set(d,s),n.success(t,s,"批量单位换算完成")}catch(e){n.calculationError(t,"批量单位换算失败",e.message)}})),a.get("/categories",i(async(e,t)=>{const r="unit-categories",a=o.get(r);if(a)return n.success(t,a,"获取单位类别完成（缓存）");try{const e=d();o.set(r,e,3600),n.success(t,e,"获取单位类别完成")}catch(e){n.error(t,"获取单位类别失败",e.message)}})),a.get("/categories/:category/units",i(async(e,t)=>{const{category:r}=e.params,a=`unit-category-${r}`,s=o.get(a);if(s)return n.success(t,s,"获取单位列表完成（缓存）");try{const e=p(r);o.set(a,e,3600),n.success(t,e,"获取单位列表完成")}catch(e){n.error(t,"获取单位列表失败",e.message)}})),a.post("/number",i(async(e,t)=>{const{input:r,type:a}=e.body;if(null==r||""===r)return n.validationError(t,["输入不能为空"]);const s=["chinese","financial","arabic","financial-amount"];if(!s.includes(a))return n.validationError(t,[`转换类型必须是 ${s.join("、")} 之一`]);const i=c.generateKey("number-convert",{input:String(r),type:a}),l=o.get(i);if(l)return n.success(t,l,"数字转换完成（缓存）");try{const e=(new g).convert(r,a);if(!e.success)return n.calculationError(t,"数字转换失败",e.error);o.set(i,e),n.success(t,e,"数字转换完成")}catch(e){n.calculationError(t,"数字转换失败",e.message)}})),a.post("/number/batch",i(async(e,t)=>{const{inputs:r,type:a}=e.body;if(!Array.isArray(r)||0===r.length)return n.validationError(t,["输入必须是非空数组"]);if(r.length>100)return n.validationError(t,["批量转换最多支持100个数字"]);const s=["chinese","financial","arabic","financial-amount"];if(!s.includes(a))return n.validationError(t,[`转换类型必须是 ${s.join("、")} 之一`]);try{const e=(new g).batchConvert(r,a),s=e.filter(e=>e.success).length,i=e.length-s;n.success(t,{results:e,summary:{total:e.length,success:s,failure:i}},`批量转换完成，成功 ${s} 个，失败 ${i} 个`)}catch(e){n.calculationError(t,"批量数字转换失败",e.message)}})),a.get("/number/types",i(async(e,t)=>{try{const e=(new g).getSupportedTypes();n.success(t,e,"获取支持类型成功")}catch(e){n.error(t,"获取支持类型失败",e.message)}})),a.post("/relationship",i(async(e,t)=>{n.success(t,{message:"TODO: 实现称呼计算逻辑"},"称呼计算接口已准备")})),e.exports=a},441:e=>{e.exports=class{constructor(){this.chineseNumbers=["零","一","二","三","四","五","六","七","八","九"],this.financialNumbers=["零","壹","贰","叁","肆","伍","陆","柒","捌","玖"],this.chineseUnits=["","十","百","千","万","十万","百万","千万","亿","十亿","百亿","千亿","万亿"],this.financialUnits=["","拾","佰","仟","万","拾万","佰万","仟万","亿","拾亿","佰亿","仟亿","万亿"],this.chineseToArabicMap={零:0,一:1,二:2,三:3,四:4,五:5,六:6,七:7,八:8,九:9,壹:1,贰:2,叁:3,肆:4,伍:5,陆:6,柒:7,捌:8,玖:9,十:10,拾:10,百:100,佰:100,千:1e3,仟:1e3,万:1e4,亿:1e8},this.MAX_NUMBER=999999999999999,this.MIN_NUMBER=-999999999999999}validateNumber(e){return"number"!=typeof e||isNaN(e)?{isValid:!1,error:"输入必须是有效数字"}:isFinite(e)?e>this.MAX_NUMBER||e<this.MIN_NUMBER?{isValid:!1,error:`数字超出支持范围 (${this.MIN_NUMBER} ~ ${this.MAX_NUMBER})`}:{isValid:!0}:{isValid:!1,error:"数字不能是无穷大"}}arabicToChinese(e,t=!1){const r=this.validateNumber(e);if(!r.isValid)throw new Error(r.error);if(0===e)return"零";const a=e<0,n=Math.abs(Math.floor(e)),s=t?this.financialNumbers:this.chineseNumbers,i=t?this.financialUnits:this.chineseUnits;let o=this.convertPositiveNumber(n,s,i);return!t&&n>=10&&n<20&&(o=o.replace(/^一十/,"十")),a?"负"+o:o}convertPositiveNumber(e,t,r){if(0===e)return t[0];let a="",n=0,s=!1;for(;e>0;){const i=e%10;0!==i?(s&&a&&(a=t[0]+a),a=t[i]+(n>0?r[n]:"")+a,s=!1):s=!0,e=Math.floor(e/10),n++}return a}chineseToArabic(e){if("string"!=typeof e)throw new Error("输入必须是字符串");const t=e.trim();if(!t)throw new Error("输入不能为空");const r=t.startsWith("负"),a=r?t.slice(1):t;if("零"===a)return 0;let n=0,s=0,i=0;for(let e=0;e<a.length;e++){const t=a[e],r=this.chineseToArabicMap[t];if(void 0===r)throw new Error(`无法识别的字符: ${t}`);r<10?i=r:10===r?(0===i&&(i=1),s+=10*i,i=0):100===r?(0===i&&(i=1),s+=100*i,i=0):1e3===r?(0===i&&(i=1),s+=1e3*i,i=0):1e4===r?(i>0&&(s+=i),0===s&&(s=1),n+=1e4*s,s=0,i=0):1e8===r&&(i>0&&(s+=i),0===s&&(s=1),n=1e8*(n+s),s=0,i=0)}return i>0&&(s+=i),n+=s,r?-n:n}toFinancialFormat(e,t="元"){const r=this.validateNumber(e);if(!r.isValid)throw new Error(r.error);if(0===e)return`零${t}整`;const a=e<0,n=Math.abs(e),s=Math.floor(n),i=Math.round(100*(n-s));let o="";if(s>0&&(o+=this.arabicToChinese(s,!0)+t),i>0){const e=Math.floor(i/10),t=i%10;s>0&&0===e&&t>0&&(o+="零"),e>0&&(o+=this.financialNumbers[e]+"角"),t>0&&(o+=this.financialNumbers[t]+"分")}else s>0&&(o+="整");return a?"负"+o:o}convert(e,t){try{let r="",a="",n=e;if("number"==typeof e)a="arabic";else{if("string"!=typeof e)throw new Error("输入类型不支持");{const t=e.trim();if(/^-?\d+(\.\d+)?$/.test(t))a="arabic",n=parseFloat(t);else{if(!/^[负]?[零一二三四五六七八九十百千万亿壹贰叁肆伍陆柒捌玖拾佰仟]+$/.test(t))throw new Error("无法识别的输入格式");a="chinese"}}}switch(t){case"chinese":r="arabic"===a?this.arabicToChinese(n,!1):n;break;case"financial":if("arabic"===a)r=this.arabicToChinese(n,!0);else{const e=this.chineseToArabic(n);r=this.arabicToChinese(e,!0)}break;case"arabic":r="chinese"===a?this.chineseToArabic(n):n;break;case"financial-amount":const e="arabic"===a?n:this.chineseToArabic(n);r=this.toFinancialFormat(e);break;default:throw new Error("不支持的转换类型")}return{success:!0,original:e,result:r,inputType:a,targetType:t,timestamp:(new Date).toISOString()}}catch(r){return{success:!1,original:e,error:r.message,inputType:"number"==typeof e?"arabic":"unknown",targetType:t,timestamp:(new Date).toISOString()}}}batchConvert(e,t){if(!Array.isArray(e))throw new Error("输入必须是数组");return e.map(e=>this.convert(e,t))}getSupportedTypes(){return{inputTypes:["arabic","chinese"],outputTypes:["chinese","financial","arabic","financial-amount"],maxNumber:this.MAX_NUMBER,minNumber:this.MIN_NUMBER,description:{chinese:"中文数字（如：一千二百三十四）",financial:"财务大写数字（如：壹仟贰佰叁拾肆）",arabic:"阿拉伯数字（如：1234）","financial-amount":"财务金额格式（如：壹仟贰佰叁拾肆元整）"}}}}},484:(e,t,r)=>{const a=r(896),n=r(928),{createLogger:s,format:i,transports:o}=r(362),c=r(233),l=n.join(__dirname,"../../logs");a.existsSync(l)||a.mkdirSync(l,{recursive:!0});const u=i.combine(i.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),i.errors({stack:!0}),i.json()),m=(i.combine(i.colorize(),i.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),i.printf(({timestamp:e,level:t,message:r,...a})=>`${e} [${t}]: ${r} ${Object.keys(a).length?JSON.stringify(a,null,2):""}`)),s({level:process.env.LOG_LEVEL||"info",format:u,defaultMeta:{service:"calculator-api"},transports:[new c({filename:n.join(l,"error-%DATE%.log"),datePattern:"YYYY-MM-DD",level:"error",maxSize:"20m",maxFiles:"30d"}),new c({filename:n.join(l,"combined-%DATE%.log"),datePattern:"YYYY-MM-DD",maxSize:"20m",maxFiles:"30d"}),new c({filename:n.join(l,"audit-%DATE%.log"),datePattern:"YYYY-MM-DD",level:"info",maxSize:"10m",maxFiles:"90d"})]}));m.on("error",e=>{console.error("Logger error:",e)}),e.exports={logger:m,generateErrorId:function(){return Math.random().toString(36).substring(2,10)+Date.now().toString(36)},auditLog:function(e,t,r={}){m.info("Audit log",{action:e,userId:t,...r,timestamp:(new Date).toISOString(),ip:r.ip||"unknown"})},performanceLog:function(e,t,r={}){m.info("Performance log",{operation:e,duration:t,...r,timestamp:(new Date).toISOString()})},securityLog:function(e,t="warn",r={}){m["error"===t?"error":"warn"]("Security event",{event:e,...r,timestamp:(new Date).toISOString(),ip:r.ip||"unknown"})}}},485:(e,t,r)=>{const a=r(252),n=r(238),s=(r(47),r(531)),{globalCache:i}=r(168),o=a.Router(),c=new n;function l(e,t){const r=[],a={};for(const[n,s]of Object.entries(t)){const t=e[n];if(!s.required||null!=t&&""!==t)if(null!=t){if("array"===s.type){if(!Array.isArray(t)){r.push(`${n} 必须是数组`);continue}if(s.minLength&&t.length<s.minLength){r.push(`${n} 长度不能少于 ${s.minLength}`);continue}if(s.maxLength&&t.length>s.maxLength){r.push(`${n} 长度不能超过 ${s.maxLength}`);continue}if(s.items)for(let e=0;e<t.length;e++){const a=t[e];if("string"===s.items.type){if("string"!=typeof a){r.push(`${n}[${e}] 必须是字符串`);continue}if(s.items.minLength&&a.length<s.items.minLength){r.push(`${n}[${e}] 长度不能少于 ${s.items.minLength}`);continue}if(s.items.maxLength&&a.length>s.items.maxLength){r.push(`${n}[${e}] 长度不能超过 ${s.items.maxLength}`);continue}}}}else if("string"===s.type){if("string"!=typeof t){r.push(`${n} 必须是字符串`);continue}if(s.minLength&&t.length<s.minLength){r.push(`${n} 长度不能少于 ${s.minLength}`);continue}if(s.maxLength&&t.length>s.maxLength){r.push(`${n} 长度不能超过 ${s.maxLength}`);continue}if(s.enum&&!s.enum.includes(t)){r.push(`${n} 必须是以下值之一: ${s.enum.join(", ")}`);continue}}a[n]=t}else void 0!==s.default&&(a[n]=s.default);else r.push(`${n} 是必填字段`)}return{isValid:0===r.length,errors:r,data:a}}const u={path:{required:!0,type:"array",minLength:1,maxLength:10,items:{type:"string",minLength:1,maxLength:10}},gender:{required:!1,type:"string",enum:["male","female"],default:"male"},region:{required:!1,type:"string",enum:["standard","northern","southern"],default:"standard"}},m={targetRelation:{required:!0,type:"string",minLength:1,maxLength:10},region:{required:!1,type:"string",enum:["standard","northern","southern"],default:"standard"}},h={path:{required:!0,type:"array",minLength:1,maxLength:10,items:{type:"string",minLength:1,maxLength:10}},expectedResult:{required:!0,type:"string",minLength:1,maxLength:10},gender:{required:!1,type:"string",enum:["male","female"],default:"male"},region:{required:!1,type:"string",enum:["standard","northern","southern"],default:"standard"}};o.post("/calculate",async(e,t)=>{try{const r=l(e.body,u);if(!r.isValid)return s.validationError(t,r.errors);const{path:a,gender:n="male",region:o="standard"}=r.data,m=`relationship:${a.join("-")}:${n}:${o}`,h=i.get(m);if(h)return s.success(t,h,"计算成功（缓存）");const d=c.calculateRelationship(a,n,o);if(!d.success)return s.calculationError(t,d.error,{path:d.path,gender:d.gender,region:d.region});i.set(m,d,300),s.success(t,d,"计算成功")}catch(e){console.error("关系计算错误:",e),s.error(t,"服务器内部错误")}}),o.post("/reverse",async(e,t)=>{try{const r=l(e.body,m);if(!r.isValid)return s.validationError(t,r.errors);const{targetRelation:a,region:n="standard"}=r.data,o=`relationship:reverse:${a}:${n}`,u=i.get(o);if(u)return s.success(t,u,"查询成功（缓存）");const h=c.reverseQuery(a,n);i.set(o,h,600),s.success(t,h,"查询成功")}catch(e){console.error("反向查询错误:",e),s.error(t,"服务器内部错误")}}),o.post("/validate",async(e,t)=>{try{const r=l(e.body,h);if(!r.isValid)return s.validationError(t,r.errors);const{path:a,expectedResult:n,gender:i="male",region:o="standard"}=r.data,u=c.validateRelationship(a,n,i,o);s.success(t,u,"验证完成")}catch(e){console.error("关系验证错误:",e),s.error(t,"服务器内部错误")}}),o.get("/relations",(e,t)=>{try{const e=c.getSupportedRelations();s.success(t,{relations:e},"获取成功")}catch(e){console.error("获取关系列表错误:",e),s.error(t,"服务器内部错误")}}),o.get("/regions",(e,t)=>{try{const e=c.getSupportedRegions();s.success(t,{regions:e},"获取成功")}catch(e){console.error("获取地区列表错误:",e),s.error(t,"服务器内部错误")}}),o.delete("/cache",(e,t)=>{try{c.clearCache();i.getStats().keys.filter(e=>e.startsWith("relationship:")).forEach(e=>i.delete(e)),s.success(t,{},"缓存清除成功")}catch(e){console.error("清除缓存错误:",e),s.error(t,"服务器内部错误")}}),e.exports=o},488:e=>{"use strict";e.exports={rE:"4.21.2"}},531:(e,t,r)=>{const{HTTP_STATUS:a,ERROR_TYPES:n}=r(130);e.exports=class{static success(e,t=null,r="Success",n=a.OK){return e.status(n).json({success:!0,message:r,data:t,timestamp:(new Date).toISOString()})}static error(e,t="Internal Server Error",r=n.CALCULATION_ERROR,s=a.INTERNAL_SERVER_ERROR,i=null){return e.status(s).json({success:!1,error:{type:r,message:t,details:i},timestamp:(new Date).toISOString()})}static validationError(e,t){return this.error(e,"输入验证失败",n.VALIDATION_ERROR,a.BAD_REQUEST,t)}static calculationError(e,t="计算错误",r=null){return this.error(e,t,n.CALCULATION_ERROR,a.BAD_REQUEST,r)}}},547:e=>{const t={mm:{name:"毫米",factor:.001,symbol:"mm"},cm:{name:"厘米",factor:.01,symbol:"cm"},m:{name:"米",factor:1,symbol:"m"},km:{name:"千米",factor:1e3,symbol:"km"},inch:{name:"英寸",factor:.0254,symbol:"in"},ft:{name:"英尺",factor:.3048,symbol:"ft"},yard:{name:"码",factor:.9144,symbol:"yd"},mile:{name:"英里",factor:1609.344,symbol:"mi"},nautical_mile:{name:"海里",factor:1852,symbol:"nmi"}},r={mg:{name:"毫克",factor:1e-6,symbol:"mg"},g:{name:"克",factor:.001,symbol:"g"},kg:{name:"千克",factor:1,symbol:"kg"},ton:{name:"吨",factor:1e3,symbol:"t"},oz:{name:"盎司",factor:.0283495,symbol:"oz"},lb:{name:"磅",factor:.453592,symbol:"lb"},stone:{name:"英石",factor:6.35029,symbol:"st"},liang:{name:"两",factor:.05,symbol:"两"},jin:{name:"斤",factor:.5,symbol:"斤"}},a={celsius:{name:"摄氏度",symbol:"°C",toCelsius:e=>e,fromCelsius:e=>e},fahrenheit:{name:"华氏度",symbol:"°F",toCelsius:e=>5*(e-32)/9,fromCelsius:e=>9*e/5+32},kelvin:{name:"开尔文",symbol:"K",toCelsius:e=>e-273.15,fromCelsius:e=>e+273.15},rankine:{name:"兰氏度",symbol:"°R",toCelsius:e=>5*(e-491.67)/9,fromCelsius:e=>9*e/5+491.67}},n={mm2:{name:"平方毫米",factor:1e-6,symbol:"mm²"},cm2:{name:"平方厘米",factor:1e-4,symbol:"cm²"},m2:{name:"平方米",factor:1,symbol:"m²"},km2:{name:"平方千米",factor:1e6,symbol:"km²"},hectare:{name:"公顷",factor:1e4,symbol:"ha"},inch2:{name:"平方英寸",factor:64516e-8,symbol:"in²"},ft2:{name:"平方英尺",factor:.092903,symbol:"ft²"},yard2:{name:"平方码",factor:.836127,symbol:"yd²"},acre:{name:"英亩",factor:4046.86,symbol:"ac"},mu:{name:"亩",factor:666.667,symbol:"亩"}},s={ml:{name:"毫升",factor:1e-6,symbol:"ml"},l:{name:"升",factor:.001,symbol:"L"},m3:{name:"立方米",factor:1,symbol:"m³"},fl_oz:{name:"液体盎司",factor:295735e-10,symbol:"fl oz"},cup:{name:"杯",factor:236588e-9,symbol:"cup"},pint:{name:"品脱",factor:473176e-9,symbol:"pt"},quart:{name:"夸脱",factor:946353e-9,symbol:"qt"},gallon:{name:"加仑",factor:.00378541,symbol:"gal"},inch3:{name:"立方英寸",factor:163871e-10,symbol:"in³"},ft3:{name:"立方英尺",factor:.0283168,symbol:"ft³"}},i={ms:{name:"毫秒",factor:.001,symbol:"ms"},s:{name:"秒",factor:1,symbol:"s"},min:{name:"分钟",factor:60,symbol:"min"},hour:{name:"小时",factor:3600,symbol:"h"},day:{name:"天",factor:86400,symbol:"d"},week:{name:"周",factor:604800,symbol:"w"},month:{name:"月",factor:2629746,symbol:"mo"},year:{name:"年",factor:31556952,symbol:"y"}},o={mps:{name:"米每秒",factor:1,symbol:"m/s"},kmh:{name:"千米每小时",factor:.277778,symbol:"km/h"},mph:{name:"英里每小时",factor:.44704,symbol:"mph"},fps:{name:"英尺每秒",factor:.3048,symbol:"ft/s"},knot:{name:"节",factor:.514444,symbol:"kn"}},c={length:{name:"长度",units:t,baseUnit:"m"},weight:{name:"重量",units:r,baseUnit:"kg"},temperature:{name:"温度",units:a,baseUnit:"celsius",specialConversion:!0},area:{name:"面积",units:n,baseUnit:"m2"},volume:{name:"体积",units:s,baseUnit:"m3"},time:{name:"时间",units:i,baseUnit:"s"},speed:{name:"速度",units:o,baseUnit:"mps"}};function l(e,t){return!(!c[e]||!c[e].units[t])}e.exports={LENGTH_UNITS:t,WEIGHT_UNITS:r,TEMPERATURE_UNITS:a,AREA_UNITS:n,VOLUME_UNITS:s,TIME_UNITS:i,SPEED_UNITS:o,UNIT_CATEGORIES:c,getSupportedCategories:function(){return Object.keys(c).map(e=>({key:e,name:c[e].name,baseUnit:c[e].baseUnit}))},getUnitsForCategory:function(e){if(!c[e])throw new Error(`不支持的单位类别: ${e}`);const t=c[e];return Object.keys(t.units).map(e=>({key:e,...t.units[e]}))},isValidUnit:l,getUnitInfo:function(e,t){if(!l(e,t))throw new Error(`无效的单位: ${e}.${t}`);return{key:t,category:e,...c[e].units[t]}}}},563:e=>{e.exports={BASIC_RELATIONS:{父亲:{gender:"male",generation:1,side:"paternal"},母亲:{gender:"female",generation:1,side:"maternal"},爸爸:{gender:"male",generation:1,side:"paternal",alias:"父亲"},妈妈:{gender:"female",generation:1,side:"maternal",alias:"母亲"},爷爷:{gender:"male",generation:2,side:"paternal"},奶奶:{gender:"female",generation:2,side:"paternal"},外公:{gender:"male",generation:2,side:"maternal"},外婆:{gender:"female",generation:2,side:"maternal"},哥哥:{gender:"male",generation:0,side:"sibling",age:"older"},弟弟:{gender:"male",generation:0,side:"sibling",age:"younger"},姐姐:{gender:"female",generation:0,side:"sibling",age:"older"},妹妹:{gender:"female",generation:0,side:"sibling",age:"younger"},儿子:{gender:"male",generation:-1,side:"child"},女儿:{gender:"female",generation:-1,side:"child"},丈夫:{gender:"male",generation:0,side:"spouse"},妻子:{gender:"female",generation:0,side:"spouse"},老公:{gender:"male",generation:0,side:"spouse",alias:"丈夫"},老婆:{gender:"female",generation:0,side:"spouse",alias:"妻子"}},RELATIONSHIP_MAP:{父亲:{父亲:{male:"爷爷",female:"爷爷"},母亲:{male:"奶奶",female:"奶奶"},哥哥:{male:"伯父",female:"伯父"},弟弟:{male:"叔叔",female:"叔叔"},姐姐:{male:"姑妈",female:"姑妈"},妹妹:{male:"姑妈",female:"姑妈"},儿子:{male:"哥哥",female:"哥哥"},女儿:{male:"姐姐",female:"姐姐"}},母亲:{父亲:{male:"外公",female:"外公"},母亲:{male:"外婆",female:"外婆"},哥哥:{male:"舅舅",female:"舅舅"},弟弟:{male:"舅舅",female:"舅舅"},姐姐:{male:"姨妈",female:"姨妈"},妹妹:{male:"姨妈",female:"姨妈"},儿子:{male:"哥哥",female:"哥哥"},女儿:{male:"姐姐",female:"姐姐"}},哥哥:{儿子:{male:"侄子",female:"侄子"},女儿:{male:"侄女",female:"侄女"},妻子:{male:"嫂子",female:"嫂子"}},弟弟:{儿子:{male:"侄子",female:"侄子"},女儿:{male:"侄女",female:"侄女"},妻子:{male:"弟媳",female:"弟媳"}},姐姐:{儿子:{male:"外甥",female:"外甥"},女儿:{male:"外甥女",female:"外甥女"},丈夫:{male:"姐夫",female:"姐夫"}},妹妹:{儿子:{male:"外甥",female:"外甥"},女儿:{male:"外甥女",female:"外甥女"},丈夫:{male:"妹夫",female:"妹夫"}},儿子:{儿子:{male:"孙子",female:"孙子"},女儿:{male:"孙女",female:"孙女"},妻子:{male:"儿媳",female:"儿媳"}},女儿:{儿子:{male:"外孙",female:"外孙"},女儿:{male:"外孙女",female:"外孙女"},丈夫:{male:"女婿",female:"女婿"}},伯父:{儿子:{male:"堂哥",female:"堂哥"},女儿:{male:"堂姐",female:"堂姐"},妻子:{male:"伯母",female:"伯母"}},叔叔:{儿子:{male:"堂弟",female:"堂弟"},女儿:{male:"堂妹",female:"堂妹"},妻子:{male:"婶婶",female:"婶婶"}},舅舅:{儿子:{male:"表哥",female:"表哥"},女儿:{male:"表姐",female:"表姐"},妻子:{male:"舅妈",female:"舅妈"}},姑妈:{儿子:{male:"表哥",female:"表哥"},女儿:{male:"表姐",female:"表姐"},丈夫:{male:"姑父",female:"姑父"}},姨妈:{儿子:{male:"表哥",female:"表哥"},女儿:{male:"表姐",female:"表姐"},丈夫:{male:"姨父",female:"姨父"}}},REVERSE_RELATIONSHIP_MAP:{爷爷:[["父亲","父亲"]],奶奶:[["父亲","母亲"]],外公:[["母亲","父亲"]],外婆:[["母亲","母亲"]],伯父:[["父亲","哥哥"]],叔叔:[["父亲","弟弟"]],姑妈:[["父亲","姐姐"],["父亲","妹妹"]],舅舅:[["母亲","哥哥"],["母亲","弟弟"]],姨妈:[["母亲","姐姐"],["母亲","妹妹"]],侄子:[["哥哥","儿子"],["弟弟","儿子"]],侄女:[["哥哥","女儿"],["弟弟","女儿"]],外甥:[["姐姐","儿子"],["妹妹","儿子"]],外甥女:[["姐姐","女儿"],["妹妹","女儿"]],孙子:[["儿子","儿子"]],孙女:[["儿子","女儿"]],外孙:[["女儿","儿子"]],外孙女:[["女儿","女儿"]],嫂子:[["哥哥","妻子"]],弟媳:[["弟弟","妻子"]],姐夫:[["姐姐","丈夫"]],妹夫:[["妹妹","丈夫"]],儿媳:[["儿子","妻子"]],女婿:[["女儿","丈夫"]]},REGIONAL_VARIATIONS:{standard:{name:"标准称呼",variations:{}},northern:{name:"北方称呼",variations:{外公:"姥爷",外婆:"姥姥",舅妈:"舅母"}},southern:{name:"南方称呼",variations:{奶奶:"阿嫲",爷爷:"阿公"}}}}},577:e=>{"use strict";e.exports=require("cors")},604:e=>{e.exports=(e,t,r)=>{const a=Date.now(),n=(new Date).toISOString();console.log(`[${n}] ${e.method} ${e.url} - ${e.ip}`),t.on("finish",()=>{const r=Date.now()-a,s=t.statusCode;console.log(`[${n}] ${e.method} ${e.url} - ${s} - ${r}ms`)}),r()}},611:e=>{"use strict";e.exports=require("http")},633:(e,t,r)=>{const a=r(252).Router(),{validateInput:n}=r(47),s=r(531);r(168),a.post("/validate",(e,t)=>{try{const{formula:r}=e.body;if(!r||!Array.isArray(r))return s.error(t,"公式数据格式无效","VALIDATION_ERROR",400);const a=o(r);return s.success(t,{valid:0===a.length,errors:a,formula:r})}catch(e){return console.error("公式验证错误:",e),s.error(t,"公式验证失败","CALCULATION_ERROR",500)}}),a.post("/execute",(e,t)=>{try{const{formula:r,variables:a}=e.body;if(!r||!Array.isArray(r))return s.error(t,"公式数据格式无效","VALIDATION_ERROR",400);if(!a||"object"!=typeof a)return s.error(t,"变量数据格式无效","VALIDATION_ERROR",400);const n=o(r);if(n.length>0)return s.error(t,"公式包含错误","VALIDATION_ERROR",400,n);const i=c(r,a);return s.success(t,{result:i,formula:r,variables:a})}catch(e){return console.error("公式执行错误:",e),s.error(t,"公式执行失败: "+e.message,"CALCULATION_ERROR",500)}}),a.post("/to-javascript",(e,t)=>{try{const{formula:r}=e.body;if(!r||!Array.isArray(r))return s.error(t,"公式数据格式无效","VALIDATION_ERROR",400);const a=l(r);return s.success(t,{javascript:a,formula:r})}catch(e){return console.error("公式转换错误:",e),s.error(t,"公式转换失败","CALCULATION_ERROR",500)}}),a.get("/functions",(e,t)=>s.success(t,{trigonometric:[{name:"sin",description:"正弦函数",args:1},{name:"cos",description:"余弦函数",args:1},{name:"tan",description:"正切函数",args:1},{name:"asin",description:"反正弦函数",args:1},{name:"acos",description:"反余弦函数",args:1},{name:"atan",description:"反正切函数",args:1}],logarithmic:[{name:"log",description:"常用对数",args:1},{name:"ln",description:"自然对数",args:1},{name:"exp",description:"指数函数",args:1}],algebraic:[{name:"sqrt",description:"平方根",args:1},{name:"pow",description:"幂函数",args:2},{name:"abs",description:"绝对值",args:1}],rounding:[{name:"floor",description:"向下取整",args:1},{name:"ceil",description:"向上取整",args:1},{name:"round",description:"四舍五入",args:1}],comparison:[{name:"max",description:"最大值",args:2},{name:"min",description:"最小值",args:2}]}));const i=new Map;function o(e){const t=[];if(0===e.length)return t;let r=0;const a=e.filter(e=>"("===e.value||")"===e.value);for(const e of a)if("("===e.value)r++;else if(")"===e.value&&(r--,r<0)){t.push("括号不匹配：右括号多于左括号");break}r>0&&t.push("括号不匹配：左括号多于右括号");for(let r=0;r<e.length-1;r++){const a=e[r],n=e[r+1];d(a)&&d(n)&&!["(",")"].includes(a.value)&&!["(",")"].includes(n.value)&&t.push(`位置 ${r+1}-${r+2}: 运算符不能连续`)}for(let t=0;t<e.length;t++){const r=e[t];"function"===r.type&&r.args}return t}function c(e,t){try{const r=l(e);console.log("Generated JS expression:",r),function(e){const t={Math,...e};delete t.eval,delete t.Function,delete t.setTimeout,delete t.setInterval}(t);const a=new Function("values","Math",`return ${r}`)(t,Math);if(console.log("Calculation result:",a),"number"!=typeof a)throw new Error("计算结果类型错误: "+typeof a);if(!isFinite(a))throw isNaN(a)?new Error("计算结果为NaN"):new Error("计算结果为无穷大");return a}catch(e){throw new Error(`计算错误: ${e.message}`)}}function l(e){if(!e||0===e.length)throw new Error("公式不能为空");let t="";for(let r=0;r<e.length;r++){const a=e[r];switch(a.type){case"operator":"x²"===a.value?t=t.trim()+"**2":"x³"===a.value?t=t.trim()+"**3":t+=u(a.value);break;case"function":t+=m(a.value||a.name);break;case"variable":t+=`values.${a.value}`;break;case"constant":t+=h(a.value);break;default:t+=a.value}"("!==a.value&&r<e.length-1&&")"!==e[r+1].value&&a.value&&!a.value.toString().endsWith("²")&&!a.value.toString().endsWith("³")&&(t+=" ")}return t.trim()}function u(e){return{"×":"*","÷":"/","−":"-","√":"Math.sqrt","∛":"(x) => Math.pow(x, 1/3)","x²":"**2","x³":"**3",xⁿ:"**","±":"+","∞":"Infinity"}[e]||e}function m(e){return{sin:"Math.sin",cos:"Math.cos",tan:"Math.tan",asin:"Math.asin",acos:"Math.acos",atan:"Math.atan",log:"Math.log10",ln:"Math.log",exp:"Math.exp",sqrt:"Math.sqrt",abs:"Math.abs",floor:"Math.floor",ceil:"Math.ceil",round:"Math.round",max:"Math.max",min:"Math.min",pow:"Math.pow",mod:"%"}[e]||e}function h(e){return{π:"Math.PI",e:"Math.E"}[e]||e}function d(e){return"operator"===e.type&&["+","-","×","÷","*","/","=","≠","<",">","≤","≥","±"].includes(e.value)}function p(e){const t=[];return e.name&&e.name.trim()||t.push("计算器名称不能为空"),e.inputFields&&Array.isArray(e.inputFields)?0===e.inputFields.length?t.push("至少需要一个输入字段"):e.inputFields.forEach((e,r)=>{e.name&&e.name.trim()||t.push(`字段 ${r+1}: 字段名称不能为空`),e.label&&e.label.trim()||t.push(`字段 ${r+1}: 显示标签不能为空`),e.type||t.push(`字段 ${r+1}: 字段类型不能为空`),"select"!==e.type&&"radio"!==e.type||e.options&&0!==e.options.length||t.push(`字段 ${r+1}: 选择类型字段必须配置选项`)}):t.push("输入字段配置无效"),e.formula&&Array.isArray(e.formula)&&0!==e.formula.length||t.push("计算公式不能为空"),t}a.post("/save-calculator",(e,t)=>{try{const{calculator:r}=e.body;if(!r||!r.name)return s.error(t,"计算器数据无效","VALIDATION_ERROR",400);const a=p(r);if(a.length>0)return s.error(t,"计算器配置错误","VALIDATION_ERROR",400,a);const n=r.id?r.id.toString():Date.now().toString(),o={...r,id:n,created:r.created||(new Date).toISOString(),updated:(new Date).toISOString()};return i.set(n,o),s.success(t,{id:n,message:"计算器保存成功",calculator:o})}catch(e){return console.error("保存自定义计算器错误:",e),s.error(t,"保存失败","SAVE_ERROR",500)}}),a.get("/calculators",(e,t)=>{try{const e=Array.from(i.values());return s.success(t,e)}catch(e){return console.error("获取计算器列表错误:",e),s.error(t,"获取失败","FETCH_ERROR",500)}}),a.get("/calculator/:id",(e,t)=>{try{const{id:r}=e.params,a=i.get(r);return a?s.success(t,a):s.error(t,"计算器不存在","NOT_FOUND",404)}catch(e){return console.error("获取计算器错误:",e),s.error(t,"获取失败","FETCH_ERROR",500)}}),a.put("/calculator/:id",(e,t)=>{try{const{id:r}=e.params,{calculator:a}=e.body;if(!i.has(r))return s.error(t,"计算器不存在","NOT_FOUND",404);if(!a||!a.name)return s.error(t,"计算器数据无效","VALIDATION_ERROR",400);const n=p(a);if(n.length>0)return s.error(t,"计算器配置错误","VALIDATION_ERROR",400,n);const o=i.get(r),c={...a,id:r,created:o.created,updated:(new Date).toISOString()};return i.set(r,c),s.success(t,{message:"计算器更新成功",calculator:c})}catch(e){return console.error("更新计算器错误:",e),s.error(t,"更新失败","UPDATE_ERROR",500)}}),a.delete("/calculator/:id",(e,t)=>{try{const{id:r}=e.params;return i.has(r)?(i.delete(r),s.success(t,{message:"计算器删除成功"})):s.error(t,"计算器不存在","NOT_FOUND",404)}catch(e){return console.error("删除计算器错误:",e),s.error(t,"删除失败","DELETE_ERROR",500)}}),a.post("/calculator/:id/copy",(e,t)=>{try{const{id:r}=e.params,{name:a}=e.body,n=i.get(r);if(!n)return s.error(t,"原计算器不存在","NOT_FOUND",404);const o=Date.now().toString(),c={...n,id:o,name:a||`${n.name} (副本)`,created:(new Date).toISOString(),updated:(new Date).toISOString()};return i.set(o,c),s.success(t,{message:"计算器复制成功",calculator:c})}catch(e){return console.error("复制计算器错误:",e),s.error(t,"复制失败","COPY_ERROR",500)}}),a.post("/export",(e,t)=>{try{const{calculatorIds:r}=e.body;if(!r||!Array.isArray(r))return s.error(t,"计算器ID列表无效","VALIDATION_ERROR",400);const a=r.map(e=>i.get(e)).filter(e=>void 0!==e);if(0===a.length)return s.error(t,"没有找到要导出的计算器","NOT_FOUND",404);const n={version:"1.0",exported:(new Date).toISOString(),calculators:a};return s.success(t,n)}catch(e){return console.error("导出计算器错误:",e),s.error(t,"导出失败","EXPORT_ERROR",500)}}),a.post("/import",(e,t)=>{try{const{data:r,overwrite:a=!1}=e.body;if(!r||!r.calculators||!Array.isArray(r.calculators))return s.error(t,"导入数据格式无效","VALIDATION_ERROR",400);const n={imported:0,skipped:0,errors:[]};return r.calculators.forEach((e,t)=>{try{const r=p(e);if(r.length>0)return n.errors.push(`计算器 ${t+1}: ${r.join(", ")}`),void n.skipped++;const s=e.id;if(s&&i.has(s)&&!a)return void n.skipped++;const o=s&&a?s:Date.now().toString()+Math.random(),c={...e,id:o,imported:(new Date).toISOString(),updated:(new Date).toISOString()};i.set(o,c),n.imported++}catch(e){n.errors.push(`计算器 ${t+1}: ${e.message}`),n.skipped++}}),s.success(t,{message:`导入完成：成功 ${n.imported} 个，跳过 ${n.skipped} 个`,results:n})}catch(e){return console.error("导入计算器错误:",e),s.error(t,"导入失败","IMPORT_ERROR",500)}}),a.post("/execute-custom",(e,t)=>{try{const{formula:r,values:a}=e.body;if(!r||!Array.isArray(r)||0===r.length)return s.error(t,"公式数据格式无效","VALIDATION_ERROR",400);if(!a||"object"!=typeof a)return s.error(t,"输入值格式无效","VALIDATION_ERROR",400);const n=c(r,a);return s.success(t,{result:n,formula:r,values:a})}catch(e){return console.error("自定义计算器执行错误:",e),s.error(t,"计算失败: "+e.message,"CALCULATION_ERROR",500)}}),e.exports=a},643:(e,t,r)=>{const{SECURITY:a}=r(130),n=r(484);e.exports={sqlInjectionProtection:(e,t,r)=>{const a=e=>"string"==typeof e&&[/(\b(SELECT|INSERT|UPDATE|DELETE|DROP|UNION|EXEC|ALTER|CREATE|TRUNCATE)\b)/i,/(\b(OR|AND)\s+['"]?\d+['"]?\s*[=<>])/i,/(--|#|\\*)/,/(;|\|\||&&)/,/(\b(WAITFOR|DELAY)\b)/i,/(\b(XP_|SP_|MS_)\w+)/i,/(\b(LOAD_FILE|INTO\s+OUTFILE|INTO\s+DUMPFILE)\b)/i].some(t=>t.test(e)),s=(t,r="")=>{for(const[i,o]of Object.entries(t)){const t=r?`${r}.${i}`:i;if(o&&"object"==typeof o){if(s(o,t))return!0}else if(o&&a(o.toString()))return n.securityLog("SQL injection attempt","warn",{path:t,value:o.toString().substring(0,100),ip:e.ip,url:e.url}),!0}return!1},i=[e.body,e.query,e.params];for(const e of i)if(e&&"object"==typeof e&&s(e))return t.status(400).json({success:!1,error:"请求包含可疑内容",code:"SECURITY_VIOLATION"});r()},xssProtection:(e,t,r)=>{const a=e=>"string"==typeof e&&[/<script\b[^>]*>(.*?)<\/script>/i,/javascript:/i,/on\w+\s*=/i,/data:/i,/vbscript:/i,/expression\s*\(/i,/<iframe\b[^>]*>(.*?)<\/iframe>/i,/<object\b[^>]*>(.*?)<\/object>/i,/<embed\b[^>]*>(.*?)<\/embed>/i,/<applet\b[^>]*>(.*?)<\/applet>/i].some(t=>t.test(e)),s=(t,r="")=>{for(const[i,o]of Object.entries(t)){const t=r?`${r}.${i}`:i;if(o&&"object"==typeof o){if(s(o,t))return!0}else if(o&&a(o.toString()))return n.securityLog("XSS attempt","warn",{path:t,value:o.toString().substring(0,100),ip:e.ip,url:e.url}),!0}return!1},i=[e.body,e.query,e.params];for(const e of i)if(e&&"object"==typeof e&&s(e))return t.status(400).json({success:!1,error:"请求包含可疑内容",code:"SECURITY_VIOLATION"});r()},inputValidation:(e,t,r)=>{const{INPUT_VALIDATION:n}=a,s=(e,t="")=>{for(const[r,a]of Object.entries(e)){const e=t?`${t}.${r}`:r;if(null!=a){if("string"==typeof a&&a.length>n.MAX_STRING_LENGTH)return`字段 ${e} 长度超过限制`;if("number"==typeof a){if(a>n.MAX_NUMBER_VALUE)return`字段 ${e} 数值过大`;if(a<n.MIN_NUMBER_VALUE)return`字段 ${e} 数值过小`}if(Array.isArray(a)&&a.length>n.MAX_ARRAY_LENGTH)return`字段 ${e} 数组长度超过限制`;if("object"==typeof a&&!Array.isArray(a)){if(e.split(".").length>n.MAX_OBJECT_DEPTH)return`字段 ${e} 嵌套深度超过限制`;const t=s(a,e);if(t)return t}}}return null},i=[e.body,e.query,e.params];for(const e of i)if(e&&"object"==typeof e){const r=s(e);if(r)return t.status(400).json({success:!1,error:r,code:"VALIDATION_ERROR"})}r()},securityHeaders:(e,t,r)=>{Object.entries(a.SECURITY_HEADERS).forEach(([e,r])=>{t.setHeader(e,r)}),t.setHeader("X-Powered-By","Calculator API"),t.setHeader("X-Frame-Options","DENY"),t.setHeader("X-Content-Type-Options","nosniff"),r()},corsConfig:(e,t,r)=>{const{CORS:n}=a,s=e.headers.origin;if(s&&n.ALLOWED_ORIGINS.includes(s)?(t.setHeader("Access-Control-Allow-Origin",s),t.setHeader("Access-Control-Allow-Credentials","true")):n.ALLOWED_ORIGINS.includes("*")&&t.setHeader("Access-Control-Allow-Origin","*"),"OPTIONS"===e.method)return t.setHeader("Access-Control-Allow-Methods",n.ALLOWED_METHODS.join(",")),t.setHeader("Access-Control-Allow-Headers",n.ALLOWED_HEADERS.join(",")),t.setHeader("Access-Control-Max-Age",n.MAX_AGE),t.status(200).end();r()},enhancedRateLimit:(e,t,a)=>{const{RATE_LIMIT:s}=r(130),i=r(743);if(s.BLACKLIST.includes(e.ip))return n.securityLog("Blacklisted IP attempt","warn",{ip:e.ip,url:e.url}),t.status(403).json({success:!1,error:"访问被拒绝",code:"ACCESS_DENIED"});i(e,t,a)}}},691:(e,t,r)=>{const a=r(252).Router(),n=r(531),{asyncHandler:s}=(r(47),r(124)),{globalCache:i,CacheUtil:o}=r(168),c=r(902);a.post("/",s(async(e,t)=>{const{weight:r,height:a,weightUnit:s="kg",heightUnit:l="cm",unit:u}=e.body;let m=s,h=l;u&&("imperial"===u?(m="lb",h="in"):"metric"===u&&(m="kg",h="cm"));const d=c.validateInput(r,a,m,h);if(!d.isValid)return n.validationError(t,d.errors);const p=o.generateKey("bmi_enhanced",{weight:r,height:a,weightUnit:m,heightUnit:h}),g=i.get(p);if(g)return n.success(t,g,"BMI计算完成（缓存）");try{const e=c.calculateBMI(r,a,m,h);i.set(p,e,3600),n.success(t,e,"BMI计算完成")}catch(e){n.calculationError(t,"BMI计算失败",e.message)}})),a.get("/units",s(async(e,t)=>{const r=c.getSupportedUnits();n.success(t,r,"获取支持的单位列表成功")})),a.get("/categories",s(async(e,t)=>{const r=Object.entries(c.BMI_CATEGORIES).map(([e,t])=>({key:e,name:t.name,range:`${t.min} - ${t.max===1/0?"∞":t.max}`,color:t.color,min:t.min,max:t.max}));n.success(t,{categories:r},"获取BMI分类信息成功")})),a.post("/batch",s(async(e,t)=>{const{measurements:r}=e.body;if(!Array.isArray(r)||0===r.length)return n.validationError(t,["measurements必须是非空数组"]);if(r.length>100)return n.validationError(t,["批量计算最多支持100条记录"]);const a=[],s=[];for(let e=0;e<r.length;e++){const t=r[e],{weight:n,height:i,weightUnit:o="kg",heightUnit:l="cm",date:u}=t;try{const t=c.validateInput(n,i,o,l);if(!t.isValid){s.push({index:e,errors:t.errors});continue}const r=c.calculateBMI(n,i,o,l);a.push({...r,date:u||(new Date).toISOString(),index:e})}catch(t){s.push({index:e,errors:[t.message]})}}n.success(t,{results:a,errors:s,summary:{total:r.length,successful:a.length,failed:s.length}},"批量BMI计算完成")})),e.exports=a},692:e=>{"use strict";e.exports=require("https")},730:(e,t,r)=>{const a=r(896),n=r(928),s=r(484),i=new class{constructor(){this.certPath=n.join(__dirname,"../../ssl"),this.hasSSL=!1,this.cert=null,this.key=null}async init(){try{a.existsSync(this.certPath)||a.mkdirSync(this.certPath,{recursive:!0});const e=n.join(this.certPath,"cert.pem"),t=n.join(this.certPath,"key.pem");a.existsSync(e)&&a.existsSync(t)?(this.cert=a.readFileSync(e),this.key=a.readFileSync(t),this.hasSSL=!0,s.info("SSL证书加载成功")):s.warn("未找到SSL证书文件，将使用HTTP")}catch(e){s.error("SSL配置初始化失败",{error:e.message}),this.hasSSL=!1}}async generateDevCert(){try{const{generate:e}=r(142),t=e([{name:"commonName",value:"localhost"}],{days:365,keySize:2048,algorithm:"sha256"}),i=n.join(this.certPath,"cert.pem"),o=n.join(this.certPath,"key.pem");a.writeFileSync(i,t.cert),a.writeFileSync(o,t.private),this.cert=t.cert,this.key=t.private,s.info("开发证书生成完成")}catch(e){throw s.error("开发证书生成失败",{error:e.message}),e}}getConfig(){return this.hasSSL?{cert:this.cert,key:this.key,minVersion:"TLSv1.2",ciphers:["TLS_AES_256_GCM_SHA384","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_GCM_SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-RSA-AES256-GCM-SHA384"].join(":"),honorCipherOrder:!0}:null}getStatus(){return{hasSSL:this.hasSSL,certPath:this.certPath,environment:"production"}}createHTTPSRedirect(){return(e,t,r)=>{if(!e.secure){const r=`https://${e.hostname}${e.originalUrl}`;return t.redirect(301,r)}r()}}createHSTSMiddleware(){return(e,t,r)=>{e.secure&&t.setHeader("Strict-Transport-Security","max-age=31536000; includeSubDomains"),r()}}};e.exports=i},743:(e,t,r)=>{const{RATE_LIMIT:a}=r(130),n=r(531),s=r(345),i=new class{constructor(){this.requests=new Map,this.whitelist=new Set,this.loadWhitelist(),setInterval(()=>{this.cleanup()},a.WINDOW_MS)}loadWhitelist(){const e=s.get("rateLimiter:whitelist");e&&(this.whitelist=new Set(e))}addToWhitelist(e){this.whitelist.add(e),s.set("rateLimiter:whitelist",[...this.whitelist],86400)}removeFromWhitelist(e){this.whitelist.delete(e),s.set("rateLimiter:whitelist",[...this.whitelist],86400)}isWhitelisted(e){return this.whitelist.has(e)}checkLimit(e){if(this.isWhitelisted(e))return{allowed:!0,remaining:1/0,resetTime:Date.now()};const t=Date.now(),r=t-a.WINDOW_MS;this.requests.has(e)||this.requests.set(e,[]);const n=this.requests.get(e).filter(e=>e>r);return this.requests.set(e,n),n.length>=a.MAX_REQUESTS?{allowed:!1,remaining:0,resetTime:r+a.WINDOW_MS}:(n.push(t),{allowed:!0,remaining:a.MAX_REQUESTS-n.length,resetTime:r+a.WINDOW_MS})}cleanup(){const e=Date.now()-a.WINDOW_MS;for(const[t,r]of this.requests.entries()){const a=r.filter(t=>t>e);0===a.length?this.requests.delete(t):this.requests.set(t,a)}}};e.exports=(e,t,r)=>{const s=e.ip||e.connection.remoteAddress||e.headers["x-forwarded-for"],o=i.checkLimit(s);if(t.set({"X-RateLimit-Limit":a.MAX_REQUESTS,"X-RateLimit-Remaining":o.remaining,"X-RateLimit-Reset":new Date(o.resetTime).toISOString()}),!o.allowed)return n.error(t,"请求过于频繁，请稍后再试","RATE_LIMIT_EXCEEDED",429,{resetTime:new Date(o.resetTime).toISOString()});r()}},787:(e,t,r)=>{const a=r(252).Router(),n=r(531),s=r(47),i=r(937),o=r(67),c=r(345),{asyncHandler:l}=r(124);a.post("/",l(async(e,t)=>{const{expression:r,type:a="basic",angleMode:l="radians"}=e.body,u=s.validateBatch([()=>s.validateExpression(r)]);if(!u.isValid)return n.validationError(t,u.errors);if(l&&!["radians","degrees"].includes(l))return n.validationError(t,["角度模式必须是 radians 或 degrees"]);const m=new i({angleMode:l}),h=c.generateKey(r,a,l),d=c.get(h);if(d)return n.success(t,{...d,cached:!0},"计算结果(缓存)");const p=m.parse(r);if(!p.success)return n.error(t,p.error,"CALCULATION_ERROR",400);c.set(h,{result:p.result,expression:r,type:a,angleMode:p.angleMode,steps:[`${r} = ${p.result}`]});const g=o.addEntry({expression:r,result:p.result,type:a,angleMode:l,timestamp:new Date});n.success(t,{result:p.result,expression:r,type:a,angleMode:p.angleMode,steps:[`${r} = ${p.result}`],historyId:g.id},"计算完成")})),a.get("/history",l(async(e,t)=>{const{limit:r=10,offset:a=0}=e.query,s=o.getHistory({limit:parseInt(r),offset:parseInt(a)});n.success(t,{history:s.entries,total:s.total,limit:parseInt(r),offset:parseInt(a)},"获取历史记录成功")})),a.delete("/history",l(async(e,t)=>{o.clearHistory(),n.success(t,null,"历史记录已清除")})),a.delete("/history/:id",l(async(e,t)=>{const{id:r}=e.params;if(!o.deleteEntry(r))return n.error(t,"历史记录不存在","NOT_FOUND",404);n.success(t,null,"历史记录已删除")})),e.exports=a},839:(e,t,r)=>{const a=r(252).Router(),n=r(787),s=r(981),i=r(945),o=r(691),c=r(367),l=r(485),u=r(633),m=r(44);a.get("/health",async(e,t)=>{const a={database:{status:"OK",timestamp:(new Date).toISOString()},memory:{usage:process.memoryUsage(),status:process.memoryUsage().rss<m.memoryThreshold?"OK":"WARNING"},cpu:{usage:process.cpuUsage(),status:"OK"}},n={status:"ERROR"===a.database.status?"ERROR":"OK",timestamp:(new Date).toISOString(),uptime:process.uptime(),checks:a,version:process.env.npm_package_version||"1.0.0",environment:"production",dependencies:{node:process.version,express:r(488).rE}},s="OK"===n.status?200:503;t.status(s).json(n)}),a.get("/health/detailed",(e,t)=>{const r={status:"OK",timestamp:(new Date).toISOString(),system:{uptime:process.uptime(),memory:process.memoryUsage(),cpu:process.cpuUsage(),platform:process.platform,arch:process.arch},process:{pid:process.pid,version:process.version,title:process.title,argv:process.argv},environment:"production",versions:process.versions};t.json(r)}),a.get("/ready",(e,t)=>{t.json({status:"ready",timestamp:(new Date).toISOString(),services:{api:"available",database:"connected",cache:"connected"}})}),a.get("/live",(e,t)=>{t.json({status:"alive",timestamp:(new Date).toISOString()})}),a.get("/info",(e,t)=>{t.json({name:"多功能计算器 API",version:"1.0.0",description:"提供多种计算功能的RESTful API",endpoints:{calculator:"/api/calculate - 基础和科学计算",tax:"/api/tax - 个税计算",mortgage:"/api/mortgage - 房贷计算",bmi:"/api/bmi - BMI计算",converter:"/api/convert - 单位换算",numberConverter:"/api/convert-number - 数字转换",relationship:"/api/relationship - 称呼计算",formula:"/api/formula - 公式编辑器"}})}),a.use("/calculate",n),a.use("/tax",s),a.use("/mortgage",i),a.use("/bmi",o),a.use("/convert",c),a.use("/convert-number",(e,t,r)=>{e.url="/number"+e.url,c(e,t,r)}),a.use("/relationship",l),a.use("/formula",u),e.exports=a},896:e=>{"use strict";e.exports=require("fs")},902:e=>{e.exports=class{static BMI_CATEGORIES={UNDERWEIGHT:{min:0,max:18.5,name:"偏瘦",color:"#3498db"},NORMAL:{min:18.5,max:24.9,name:"正常",color:"#2ecc71"},OVERWEIGHT:{min:25,max:29.9,name:"偏胖",color:"#f39c12"},OBESE_CLASS_1:{min:30,max:34.9,name:"轻度肥胖",color:"#e67e22"},OBESE_CLASS_2:{min:35,max:39.9,name:"中度肥胖",color:"#d35400"},OBESE_CLASS_3:{min:40,max:1/0,name:"重度肥胖",color:"#c0392b"}};static CONVERSION_FACTORS={weight:{kg:1,lb:.453592,stone:6.35029,g:.001},height:{m:1,cm:.01,ft:.3048,in:.0254,mm:.001}};static calculateBMI(e,t,r="kg",a="cm"){const n=this.convertWeight(e,r),s=this.convertHeight(t,a),i=n/(s*s),o=this.getBMICategory(i),c=this.getDetailedAnalysis(i,n,s),l=this.getRecommendations(i,o),u=this.getIdealWeightRange(s,r);return{bmi:Math.round(100*i)/100,category:o.name,categoryColor:o.color,analysis:c,recommendations:l,idealWeightRange:u,input:{weight:e,height:t,weightUnit:r,heightUnit:a},converted:{weightKg:Math.round(100*n)/100,heightM:Math.round(100*s)/100},healthRisk:this.getHealthRisk(i),calculatedAt:(new Date).toISOString()}}static convertWeight(e,t){const r=this.CONVERSION_FACTORS.weight[t];if(!r)throw new Error(`不支持的体重单位: ${t}`);return e*r}static convertHeight(e,t){const r=this.CONVERSION_FACTORS.height[t];if(!r)throw new Error(`不支持的身高单位: ${t}`);return e*r}static getBMICategory(e){for(const[t,r]of Object.entries(this.BMI_CATEGORIES))if(e>=r.min&&e<r.max)return r;return this.BMI_CATEGORIES.OBESE_CLASS_3}static getDetailedAnalysis(e,t,r){const a=this.getBMICategory(e);let n={status:a.name,description:"",percentile:this.getBMIPercentile(e),bodyFatEstimate:this.estimateBodyFat(e),metabolicAge:this.estimateMetabolicAge(e,t,r)};switch(a.name){case"偏瘦":n.description="您的体重偏轻，可能存在营养不良的风险。建议增加营养摄入，进行适当的力量训练来增加肌肉量。";break;case"正常":n.description="恭喜！您的BMI处于健康范围内。继续保持良好的饮食习惯和规律运动。";break;case"偏胖":n.description="您的体重略微超标，建议通过合理饮食控制和增加运动来改善体重状况。";break;case"轻度肥胖":n.description="您处于轻度肥胖状态，需要采取积极措施控制体重，降低慢性疾病风险。";break;case"中度肥胖":n.description="您处于中度肥胖状态，强烈建议咨询医生制定专业的减重计划。";break;case"重度肥胖":n.description="您处于重度肥胖状态，存在严重健康风险，请立即咨询医疗专业人士。"}return n}static getRecommendations(e,t){const r={diet:[],exercise:[],lifestyle:[],medical:[]};switch(t.name){case"偏瘦":r.diet=["增加健康脂肪摄入（坚果、牛油果、橄榄油）","多吃蛋白质丰富的食物（鸡蛋、瘦肉、豆类）","适当增加碳水化合物摄入","少食多餐，增加营养密度"],r.exercise=["进行力量训练增加肌肉量","避免过度有氧运动","重点训练大肌群","确保充足的休息恢复"],r.lifestyle=["保证充足睡眠（7-9小时）","减少压力和焦虑","戒烟限酒","定期体检监测健康状况"];break;case"正常":r.diet=["保持均衡饮食","多吃蔬菜水果","控制加工食品摄入","适量摄入优质蛋白质"],r.exercise=["每周至少150分钟中等强度有氧运动","每周2-3次力量训练","保持运动多样性","逐步增加运动强度"],r.lifestyle=["保持规律作息","管理工作压力","保持社交活动","定期健康检查"];break;case"偏胖":case"轻度肥胖":r.diet=["控制总热量摄入","减少高糖高脂食物","增加膳食纤维摄入","控制餐具大小，细嚼慢咽"],r.exercise=["每周至少300分钟中等强度有氧运动","结合力量训练维持肌肉量","增加日常活动量","选择喜欢的运动方式坚持"],r.lifestyle=["建立健康的生活习惯","寻求家人朋友支持","设定合理的减重目标","记录饮食和运动日志"],r.medical=["定期监测血压、血糖","考虑咨询营养师","必要时寻求医生指导"];break;case"中度肥胖":case"重度肥胖":r.diet=["严格控制热量摄入","考虑专业营养师指导","可能需要特殊饮食计划","避免极端节食"],r.exercise=["从低强度运动开始","逐步增加运动量","选择关节友好的运动","在专业指导下进行"],r.lifestyle=["寻求专业医疗支持","考虑心理咨询","建立强大的支持系统","设定阶段性目标"],r.medical=["立即咨询医生","全面健康检查","监测相关疾病风险","考虑医疗干预选项"]}return r}static getIdealWeightRange(e,t="kg"){const r=18.5*e*e,a=24.9*e*e,n=1/this.CONVERSION_FACTORS.weight[t];return{min:Math.round(r*n*100)/100,max:Math.round(a*n*100)/100,unit:t}}static getBMIPercentile(e){return e<18.5?Math.max(5,Math.round(e/18.5*15)):e<25?Math.round(15+(e-18.5)/6.5*70):e<30?Math.round(85+(e-25)/5*10):Math.min(99,Math.round(95+(e-30)/10*4))}static estimateBodyFat(e){let t;return t=e<18.5?Math.max(5,2*(e-15)):e<25?10+2*(e-18.5):23+1.5*(e-25),{estimated:Math.round(10*t)/10,note:"此为基于BMI的粗略估算，实际体脂率可能有较大差异"}}static estimateMetabolicAge(e,t,r){const a=30+(88.362+13.397*t+4.799*r*100-170.31-(88.362+294.734*r*r+4.799*r*100-170.31))/10;return{estimated:Math.round(Math.max(18,Math.min(80,a))),note:"代谢年龄是基于基础代谢率的估算值"}}static getHealthRisk(e){const t={level:"low",description:"",conditions:[]};return e<18.5?(t.level="moderate",t.description="体重过轻可能增加某些健康风险",t.conditions=["营养不良","免疫力下降","骨质疏松","生育问题"]):e>=18.5&&e<25?(t.level="low",t.description="健康风险较低",t.conditions=[]):e>=25&&e<30?(t.level="moderate",t.description="超重增加慢性疾病风险",t.conditions=["高血压","2型糖尿病","心血管疾病","睡眠呼吸暂停"]):e>=30&&e<35?(t.level="high",t.description="肥胖显著增加健康风险",t.conditions=["心脏病","中风","糖尿病","某些癌症","关节疾病"]):(t.level="very_high",t.description="严重肥胖存在重大健康风险",t.conditions=["心血管疾病","糖尿病并发症","呼吸系统疾病","多种癌症","严重关节问题"]),t}static validateInput(e,t,r,a){const n=[];if((!e||isNaN(e)||e<=0)&&n.push("体重必须是大于0的数字"),(!t||isNaN(t)||t<=0)&&n.push("身高必须是大于0的数字"),this.CONVERSION_FACTORS.weight[r]||n.push(`不支持的体重单位: ${r}`),this.CONVERSION_FACTORS.height[a]||n.push(`不支持的身高单位: ${a}`),0===n.length)try{const s=this.convertWeight(e,r),i=this.convertHeight(t,a);(s<1||s>1e3)&&n.push("体重超出合理范围（1-1000千克）"),(i<.3||i>3)&&n.push("身高超出合理范围（0.3-3米）")}catch(e){n.push(e.message)}return{isValid:0===n.length,errors:n}}static getSupportedUnits(){return{weight:Object.keys(this.CONVERSION_FACTORS.weight),height:Object.keys(this.CONVERSION_FACTORS.height)}}}},928:e=>{"use strict";e.exports=require("path")},937:e=>{class t{constructor(e){this.expression=e.replace(/\s+/g,""),this.position=0,this.tokens=[]}tokenize(){for(;this.position<this.expression.length;){const e=this.expression[this.position];if(this.isDigit(e)||"."===e)this.readNumber();else if(this.isOperator(e))this.readOperator();else if("("===e||")"===e)this.readParenthesis();else{if(!this.isLetter(e))throw new Error(`无效字符: ${e} 在位置 ${this.position}`);this.readFunction()}}return this.tokens}readNumber(){let e="",t=!1;for(;this.position<this.expression.length;){const r=this.expression[this.position];if(this.isDigit(r))e+=r,this.position++;else{if("."!==r||t)break;t=!0,e+=r,this.position++}}if("."===e||""===e)throw new Error("无效的数字格式");this.tokens.push({type:"NUMBER",value:parseFloat(e),raw:e})}readOperator(){const e=this.expression[this.position];this.tokens.push({type:"OPERATOR",value:e,raw:e}),this.position++}readParenthesis(){const e=this.expression[this.position];this.tokens.push({type:"("===e?"LEFT_PAREN":"RIGHT_PAREN",value:e,raw:e}),this.position++}readFunction(){let e="";for(;this.position<this.expression.length&&(this.isLetter(this.expression[this.position])||this.isDigit(this.expression[this.position]));)e+=this.expression[this.position],this.position++;if(["sin","cos","tan","asin","acos","atan","sinh","cosh","tanh","log","ln","log2","exp","sqrt","cbrt","abs","ceil","floor","round","sign","deg","rad"].includes(e.toLowerCase()))this.tokens.push({type:"FUNCTION",value:e.toLowerCase(),raw:e});else{if(!["pi","e"].includes(e.toLowerCase()))throw new Error(`不支持的函数或常数: ${e}`);this.tokens.push({type:"CONSTANT",value:e.toLowerCase(),raw:e})}}isDigit(e){return e>="0"&&e<="9"}isLetter(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"}isOperator(e){return["+","-","*","/","^","%"].includes(e)}}class r{constructor(e){this.tokens=e,this.position=0}parse(){if(0===this.tokens.length)throw new Error("空表达式");const e=this.parseExpression();if(this.position<this.tokens.length)throw new Error(`意外的标记: ${this.tokens[this.position].raw}`);return e}parseExpression(){let e=this.parseTerm();for(;this.position<this.tokens.length;){const t=this.tokens[this.position];if("OPERATOR"!==t.type||"+"!==t.value&&"-"!==t.value)break;{this.position++;const r=this.parseTerm();e={type:"BINARY_OP",operator:t.value,left:e,right:r}}}return e}parseTerm(){let e=this.parseFactor();for(;this.position<this.tokens.length;){const t=this.tokens[this.position];if("OPERATOR"!==t.type||"*"!==t.value&&"/"!==t.value&&"%"!==t.value)break;{this.position++;const r=this.parseFactor();e={type:"BINARY_OP",operator:t.value,left:e,right:r}}}return e}parseFactor(){let e=this.parsePrimary();for(;this.position<this.tokens.length;){const t=this.tokens[this.position];if("OPERATOR"!==t.type||"^"!==t.value)break;this.position++,e={type:"BINARY_OP",operator:"^",left:e,right:this.parseFactor()}}return e}parsePrimary(){const e=this.tokens[this.position];if(!e)throw new Error("意外的表达式结束");if("OPERATOR"===e.type&&"-"===e.value)return this.position++,{type:"UNARY_OP",operator:"-",operand:this.parseFactor()};if("OPERATOR"===e.type&&"+"===e.value)return this.position++,this.parseFactor();if("NUMBER"===e.type)return this.position++,{type:"NUMBER",value:e.value};if("CONSTANT"===e.type)return this.position++,{type:"CONSTANT",value:e.value};if("FUNCTION"===e.type){if(this.position++,this.position>=this.tokens.length||"LEFT_PAREN"!==this.tokens[this.position].type)throw new Error(`函数 ${e.value} 后面必须跟括号`);this.position++;const t=this.parseExpression();if(this.position>=this.tokens.length||"RIGHT_PAREN"!==this.tokens[this.position].type)throw new Error(`函数 ${e.value} 缺少右括号`);return this.position++,{type:"FUNCTION",name:e.value,argument:t}}if("LEFT_PAREN"===e.type){this.position++;const e=this.parseExpression();if(this.position>=this.tokens.length||"RIGHT_PAREN"!==this.tokens[this.position].type)throw new Error("缺少右括号");return this.position++,e}throw new Error(`意外的标记: ${e.raw}`)}}class a{constructor(){this.constants={pi:Math.PI,e:Math.E},this.angleMode="radians",this.functions={sin:e=>Math.sin("degrees"===this.angleMode?this.degreesToRadians(e):e),cos:e=>Math.cos("degrees"===this.angleMode?this.degreesToRadians(e):e),tan:e=>Math.tan("degrees"===this.angleMode?this.degreesToRadians(e):e),asin:e=>"degrees"===this.angleMode?this.radiansToDegrees(Math.asin(e)):Math.asin(e),acos:e=>"degrees"===this.angleMode?this.radiansToDegrees(Math.acos(e)):Math.acos(e),atan:e=>"degrees"===this.angleMode?this.radiansToDegrees(Math.atan(e)):Math.atan(e),sinh:Math.sinh,cosh:Math.cosh,tanh:Math.tanh,log:Math.log10,ln:Math.log,log2:Math.log2,exp:Math.exp,sqrt:Math.sqrt,cbrt:Math.cbrt,abs:Math.abs,ceil:Math.ceil,floor:Math.floor,round:Math.round,sign:Math.sign,deg:this.radiansToDegrees.bind(this),rad:this.degreesToRadians.bind(this)}}setAngleMode(e){if("radians"!==e&&"degrees"!==e)throw new Error('角度模式必须是 "radians" 或 "degrees"');this.angleMode=e}degreesToRadians(e){return e*Math.PI/180}radiansToDegrees(e){return 180*e/Math.PI}evaluate(e){switch(e.type){case"NUMBER":return e.value;case"CONSTANT":if(void 0!==this.constants[e.value])return this.constants[e.value];throw new Error(`未知常数: ${e.value}`);case"BINARY_OP":const t=this.evaluate(e.left),r=this.evaluate(e.right);return this.evaluateBinaryOperation(e.operator,t,r);case"UNARY_OP":const a=this.evaluate(e.operand);return this.evaluateUnaryOperation(e.operator,a);case"FUNCTION":const n=this.evaluate(e.argument);return this.evaluateFunction(e.name,n);default:throw new Error(`未知的AST节点类型: ${e.type}`)}}evaluateBinaryOperation(e,t,r){switch(e){case"+":return t+r;case"-":return t-r;case"*":return t*r;case"/":if(0===r)throw new Error("除数不能为零");return t/r;case"^":return Math.pow(t,r);case"%":if(0===r)throw new Error("模运算的除数不能为零");return t%r;default:throw new Error(`未知的二元运算符: ${e}`)}}evaluateUnaryOperation(e,t){switch(e){case"-":return-t;case"+":return t;default:throw new Error(`未知的一元运算符: ${e}`)}}evaluateFunction(e,t){if(this.functions[e])switch(e){case"sin":return Math.sin("degrees"===this.angleMode?this.degreesToRadians(t):t);case"cos":return Math.cos("degrees"===this.angleMode?this.degreesToRadians(t):t);case"tan":return Math.tan("degrees"===this.angleMode?this.degreesToRadians(t):t);case"sqrt":return Math.sqrt(t);case"log":return Math.log10(t);case"ln":return Math.log(t);case"abs":return Math.abs(t);default:const r=this.functions[e](t);if(!isFinite(r))throw new Error(`函数 ${e} 的计算结果无效`);return r}throw new Error(`未知函数: ${e}`)}}e.exports=class{constructor(e={}){this.evaluator=new a,e.angleMode&&this.evaluator.setAngleMode(e.angleMode)}setAngleMode(e){this.evaluator.setAngleMode(e)}getAngleMode(){return this.evaluator.angleMode}parse(e,a={}){try{this.validateSecurity(e);const a=new t(e).tokenize(),n=new r(a).parse(),s=this.evaluator.evaluate(n);return{success:!0,result:this.roundToPrecision(s,10),expression:e,tokens:a,ast:n,angleMode:this.evaluator.angleMode}}catch(t){return{success:!1,error:t.message,expression:e}}}validateSecurity(e){if(!e||"string"!=typeof e)throw new Error("表达式必须是非空字符串");if(e.length>1e3)throw new Error("表达式长度不能超过1000个字符");const t=[/eval\s*\(/i,/function\s*\(/i,/=>/,/import\s+/i,/require\s*\(/i,/process\./i,/global\./i,/__proto__/i,/constructor/i,/\$\{/,/javascript:/i,/data:/i];for(const r of t)if(r.test(e))throw new Error("表达式包含不安全的内容");let r=0;for(const t of e)if("("===t&&r++,")"===t&&r--,r<0)throw new Error("括号不匹配");if(0!==r)throw new Error("括号不匹配")}roundToPrecision(e,t){if(!isFinite(e))throw new Error("计算结果无效");const r=Math.pow(10,t);return Math.round(e*r)/r}}},945:(e,t,r)=>{const a=r(252).Router(),n=r(531),s=r(47),{asyncHandler:i}=r(124),{globalCache:o,CacheUtil:c}=r(168),l=r(170);a.post("/",i(async(e,t)=>{const{principal:r,rate:a,years:i,type:u="equal",includeSchedule:m=!1}=e.body,h=s.validateBatch([()=>s.validateNumber(r,"贷款本金"),()=>s.validatePositive(r,"贷款本金"),()=>s.validateNumber(a,"利率"),()=>s.validatePositive(a,"利率"),()=>s.validateRange(a,.1,20,"利率"),()=>s.validateNumber(i,"贷款年限"),()=>s.validatePositive(i,"贷款年限"),()=>s.validateRange(i,1,50,"贷款年限")]);if(!h.isValid)return n.validationError(t,h.errors);if(!["equal","principal"].includes(u))return n.validationError(t,["还款类型必须是 equal 或 principal"]);const d=c.generateKey("mortgage-basic",{principal:r,rate:a,years:i,type:u,includeSchedule:m}),p=o.get(d);if(p)return n.success(t,p,"房贷计算完成（缓存）");try{const e="equal"===u?l.calculateEqualPayment({principal:r,rate:a,years:i,includeSchedule:m}):l.calculateEqualPrincipal({principal:r,rate:a,years:i,includeSchedule:m});o.set(d,e),n.success(t,e,"房贷计算完成")}catch(e){n.calculationError(t,"房贷计算失败",e.message)}})),e.exports=a,a.post("/schedule",i(async(e,t)=>{const{principal:r,rate:a,years:i,type:u="equal",groupBy:m=1}=e.body,h=s.validateBatch([()=>s.validateNumber(r,"贷款本金"),()=>s.validatePositive(r,"贷款本金"),()=>s.validateNumber(a,"利率"),()=>s.validatePositive(a,"利率"),()=>s.validateNumber(i,"贷款年限"),()=>s.validatePositive(i,"贷款年限"),()=>s.validateNumber(m,"分组方式")]);if(!h.isValid)return n.validationError(t,h.errors);if(!["equal","principal"].includes(u))return n.validationError(t,["还款类型必须是 equal 或 principal"]);const d=c.generateKey("mortgage-schedule",{principal:r,rate:a,years:i,type:u,groupBy:m}),p=o.get(d);if(p)return n.success(t,p,"还款计划生成完成（缓存）");try{const e="equal"===u?l.calculateEqualPayment({principal:r,rate:a,years:i,includeSchedule:!0}):l.calculateEqualPrincipal({principal:r,rate:a,years:i,includeSchedule:!0}),s={loanSummary:{type:e.type,principal:e.principal,rate:e.rate,years:e.years,totalPayment:e.totalPayment,totalInterest:e.totalInterest},schedule:e.schedule,summary:m>1?l.generateScheduleSummary(e.schedule,m):null};o.set(d,s),n.success(t,s,"还款计划生成完成")}catch(e){n.calculationError(t,"还款计划生成失败",e.message)}})),a.post("/prepayment",i(async(e,t)=>{const{principal:r,rate:a,years:i,type:u="equal",prepaymentAmount:m,prepaymentMonth:h,prepaymentType:d="reduce_term"}=e.body,p=s.validateBatch([()=>s.validateNumber(r,"贷款本金"),()=>s.validatePositive(r,"贷款本金"),()=>s.validateNumber(a,"利率"),()=>s.validatePositive(a,"利率"),()=>s.validateNumber(i,"贷款年限"),()=>s.validatePositive(i,"贷款年限"),()=>s.validateNumber(m,"提前还款金额"),()=>s.validatePositive(m,"提前还款金额"),()=>s.validateNumber(h,"提前还款月份"),()=>s.validatePositive(h,"提前还款月份")]);if(!p.isValid)return n.validationError(t,p.errors);if(!["equal","principal"].includes(u))return n.validationError(t,["还款类型必须是 equal 或 principal"]);if(!["reduce_term","reduce_payment"].includes(d))return n.validationError(t,["提前还款类型必须是 reduce_term 或 reduce_payment"]);if(h>12*i)return n.validationError(t,["提前还款月份不能超过贷款总月数"]);const g=c.generateKey("mortgage-prepayment",{principal:r,rate:a,years:i,type:u,prepaymentAmount:m,prepaymentMonth:h,prepaymentType:d}),y=o.get(g);if(y)return n.success(t,y,"提前还款计算完成（缓存）");try{const e=l.calculatePrepayment({principal:r,rate:a,years:i,type:u,prepaymentAmount:m,prepaymentMonth:h,prepaymentType:d});if(e.error)return n.validationError(t,[e.error]);o.set(g,e),n.success(t,e,"提前还款计算完成")}catch(e){n.calculationError(t,"提前还款计算失败",e.message)}})),a.post("/compare",i(async(e,t)=>{const{principal:r,rate:a,years:i}=e.body,u=s.validateBatch([()=>s.validateNumber(r,"贷款本金"),()=>s.validatePositive(r,"贷款本金"),()=>s.validateNumber(a,"利率"),()=>s.validatePositive(a,"利率"),()=>s.validateNumber(i,"贷款年限"),()=>s.validatePositive(i,"贷款年限")]);if(!u.isValid)return n.validationError(t,u.errors);const m=c.generateKey("mortgage-compare",{principal:r,rate:a,years:i}),h=o.get(m);if(h)return n.success(t,h,"还款方式对比完成（缓存）");try{const e=l.comparePaymentMethods({principal:r,rate:a,years:i});o.set(m,e),n.success(t,e,"还款方式对比完成")}catch(e){n.calculationError(t,"还款方式对比失败",e.message)}})),a.post("/affordability",i(async(e,t)=>{const{monthlyIncome:r,monthlyExpenses:a=0,rate:i,years:u,debtToIncomeRatio:m=.5}=e.body,h=s.validateBatch([()=>s.validateNumber(r,"月收入"),()=>s.validatePositive(r,"月收入"),()=>s.validateNumber(a,"月支出"),()=>s.validateNumber(i,"利率"),()=>s.validatePositive(i,"利率"),()=>s.validateNumber(u,"贷款年限"),()=>s.validatePositive(u,"贷款年限"),()=>s.validateNumber(m,"负债收入比"),()=>s.validateRange(m,.1,.8,"负债收入比")]);if(!h.isValid)return n.validationError(t,h.errors);if(a>=r)return n.validationError(t,["月支出不能大于或等于月收入"]);const d=c.generateKey("mortgage-affordability",{monthlyIncome:r,monthlyExpenses:a,rate:i,years:u,debtToIncomeRatio:m}),p=o.get(d);if(p)return n.success(t,p,"承受能力分析完成（缓存）");try{const e=l.calculateAffordability({monthlyIncome:r,monthlyExpenses:a,rate:i,years:u,debtToIncomeRatio:m});o.set(d,e),n.success(t,e,"承受能力分析完成")}catch(e){n.calculationError(t,"承受能力分析失败",e.message)}})),a.post("/scenarios",i(async(e,t)=>{const{scenarios:r}=e.body;if(!Array.isArray(r)||0===r.length)return n.validationError(t,["请提供至少一个贷款方案"]);if(r.length>5)return n.validationError(t,["最多支持对比5个贷款方案"]);for(let e=0;e<r.length;e++){const a=r[e],i=s.validateBatch([()=>s.validateNumber(a.principal,`方案${e+1}贷款本金`),()=>s.validatePositive(a.principal,`方案${e+1}贷款本金`),()=>s.validateNumber(a.rate,`方案${e+1}利率`),()=>s.validatePositive(a.rate,`方案${e+1}利率`),()=>s.validateNumber(a.years,`方案${e+1}贷款年限`),()=>s.validatePositive(a.years,`方案${e+1}贷款年限`)]);if(!i.isValid)return n.validationError(t,i.errors);if(a.type&&!["equal","principal"].includes(a.type))return n.validationError(t,[`方案${e+1}还款类型必须是 equal 或 principal`])}const a=c.generateKey("mortgage-scenarios",{scenarios:r}),i=o.get(a);if(i)return n.success(t,i,"贷款方案对比完成（缓存）");try{const e=r.map((e,t)=>{const{principal:r,rate:a,years:n,type:s="equal",name:i}=e,o="equal"===s?l.calculateEqualPayment({principal:r,rate:a,years:n}):l.calculateEqualPrincipal({principal:r,rate:a,years:n});return{name:i||`方案${t+1}`,...o,costEffectiveness:Math.round(o.totalInterest/o.principal*1e4)/100}}),s=e.reduce((e,t)=>t.totalInterest<e.totalInterest?t:e),i={scenarios:e,bestScenario:s.name,analysis:{lowestTotalInterest:s.totalInterest,highestTotalInterest:Math.max(...e.map(e=>e.totalInterest)),interestRange:Math.max(...e.map(e=>e.totalInterest))-s.totalInterest}};o.set(a,i),n.success(t,i,"贷款方案对比完成")}catch(e){n.calculationError(t,"贷款方案对比失败",e.message)}}))},981:(e,t,r)=>{const a=r(252).Router(),n=r(531),s=r(47),{asyncHandler:i}=r(124),{globalCache:o,CacheUtil:c}=r(168),l=r(39);a.post("/",i(async(e,t)=>{const{salary:r,socialInsurance:a=0,housingFund:i=0,specialDeductions:u={},year:m=(new Date).getFullYear()}=e.body,h=s.validateBatch([()=>s.validateNumber(r,"工资"),()=>s.validatePositive(r,"工资"),()=>s.validateNumber(a,"社保"),()=>s.validateNumber(i,"公积金"),()=>s.validateNumber(m,"年份")]);if(!h.isValid)return n.validationError(t,h.errors);const d=c.generateKey("tax-monthly",{salary:r,socialInsurance:a,housingFund:i,specialDeductions:u,year:m}),p=o.get(d);if(p)return n.success(t,p,"个税计算完成（缓存）");try{const e=l.calculateMonthlySalaryTax({salary:r,socialInsurance:a,housingFund:i,specialDeductions:u,year:m});e.suggestions=l.getTaxOptimizationSuggestions(e),o.set(d,e),n.success(t,e,"个税计算完成")}catch(e){n.calculationError(t,"个税计算失败",e.message)}})),e.exports=a,a.post("/annual",i(async(e,t)=>{const{annualSalary:r,annualBonus:a=0,otherIncome:i=0,annualSocialInsurance:u=0,annualHousingFund:m=0,specialDeductions:h={},bonusTaxMethod:d="combined",year:p=(new Date).getFullYear()}=e.body,g=s.validateBatch([()=>s.validateNumber(r,"年度工资"),()=>s.validatePositive(r,"年度工资"),()=>s.validateNumber(a,"年终奖"),()=>s.validateNumber(i,"其他收入"),()=>s.validateNumber(u,"年度社保"),()=>s.validateNumber(m,"年度公积金"),()=>s.validateNumber(p,"年份")]);if(!g.isValid)return n.validationError(t,g.errors);if(!["separate","combined"].includes(d))return n.validationError(t,["年终奖计税方式必须为 separate 或 combined"]);const y=c.generateKey("tax-annual",{annualSalary:r,annualBonus:a,otherIncome:i,annualSocialInsurance:u,annualHousingFund:m,specialDeductions:h,bonusTaxMethod:d,year:p}),f=o.get(y);if(f)return n.success(t,f,"年度个税计算完成（缓存）");try{const e=l.calculateAnnualTax({annualSalary:r,annualBonus:a,otherIncome:i,annualSocialInsurance:u,annualHousingFund:m,specialDeductions:h,bonusTaxMethod:d,year:p});e.suggestions=l.getTaxOptimizationSuggestions(e),o.set(y,e),n.success(t,e,"年度个税计算完成")}catch(e){n.calculationError(t,"年度个税计算失败",e.message)}})),a.post("/social-insurance",i(async(e,t)=>{const{salary:r,city:a="national",customRates:i={}}=e.body,u=s.validateBatch([()=>s.validateNumber(r,"工资"),()=>s.validatePositive(r,"工资")]);if(!u.isValid)return n.validationError(t,u.errors);const m=c.generateKey("social-insurance",{salary:r,city:a,customRates:i}),h=o.get(m);if(h)return n.success(t,h,"社保公积金计算完成（缓存）");try{const e=l.calculateSocialInsurance({salary:r,city:a,customRates:i});o.set(m,e),n.success(t,e,"社保公积金计算完成")}catch(e){n.calculationError(t,"社保公积金计算失败",e.message)}})),a.get("/config",i(async(e,t)=>{const{year:a=(new Date).getFullYear()}=e.query;try{const e=r(24),s={basicDeduction:e.getBasicDeduction(a),monthlyTaxBrackets:e.getMonthlyTaxBrackets(),annualTaxBrackets:e.getAnnualTaxBrackets(),specialDeductions:e.getSpecialDeductions(),socialInsuranceLimits:{beijing:e.getSocialInsuranceLimits("beijing"),national:e.getSocialInsuranceLimits("national")},bonusTaxMethods:e.BONUS_TAX_METHODS};n.success(t,s,"个税配置获取成功")}catch(e){n.error(t,"获取个税配置失败",e.message)}})),a.post("/bonus-comparison",i(async(e,t)=>{const{annualSalary:r,annualBonus:a,otherIncome:i=0,annualSocialInsurance:o=0,annualHousingFund:c=0,specialDeductions:u={},year:m=(new Date).getFullYear()}=e.body,h=s.validateBatch([()=>s.validateNumber(r,"年度工资"),()=>s.validatePositive(r,"年度工资"),()=>s.validateNumber(a,"年终奖"),()=>s.validatePositive(a,"年终奖")]);if(!h.isValid)return n.validationError(t,h.errors);try{const e=l.calculateAnnualTax({annualSalary:r,annualBonus:a,otherIncome:i,annualSocialInsurance:o,annualHousingFund:c,specialDeductions:u,bonusTaxMethod:"separate",year:m}),s=l.calculateAnnualTax({annualSalary:r,annualBonus:a,otherIncome:i,annualSocialInsurance:o,annualHousingFund:c,specialDeductions:u,bonusTaxMethod:"combined",year:m}),h={separate:{method:"年终奖单独计税",tax:e.tax,afterTaxIncome:e.afterTaxIncome,effectiveTaxRate:e.effectiveTaxRate},combined:{method:"并入综合所得计税",tax:s.tax,afterTaxIncome:s.afterTaxIncome,effectiveTaxRate:s.effectiveTaxRate},recommendation:e.tax<s.tax?"separate":"combined",taxDifference:Math.abs(e.tax-s.tax),incomeDifference:Math.abs(e.afterTaxIncome-s.afterTaxIncome)};n.success(t,h,"年终奖计税方式对比完成")}catch(e){n.calculationError(t,"年终奖计税方式对比失败",e.message)}}))},985:(e,t,r)=>{const a=r(127),n=r(730),s=r(484),i=process.env.HTTP_PORT||3e3,o=process.env.HTTPS_PORT||3443,c=async function(){try{await n.init();const e=n.getConfig();let t;if(e){t=r(692).createServer(e,a),t.listen(o,()=>{s.info("HTTPS服务器启动成功",{port:o,environment:"production"}),console.log("🚀 HTTPS服务器启动成功"),console.log(`📍 服务地址: https://localhost:${o}`),console.log("🔧 环境: production"),console.log("🔐 SSL: 已启用")});{const e=r(611),t=r(252)();t.use((e,t)=>{t.redirect(301,`https://${e.hostname}${e.originalUrl}`)}),e.createServer(t).listen(i,()=>{s.info("HTTP重定向服务器启动成功",{port:i}),console.log(`🔄 HTTP重定向服务运行在端口 ${i}`)})}}else t=r(611).createServer(a),t.listen(i,()=>{s.info("HTTP服务器启动成功",{port:i,environment:"production"}),console.log("🚀 HTTP服务器启动成功"),console.log(`📍 服务地址: http://localhost:${i}`),console.log("🔧 环境: production"),console.log("⚠️ SSL: 未启用")});return t}catch(e){throw s.error("服务器启动失败",{error:e.message}),e}}().catch(e=>{console.error("服务器启动失败:",e),process.exit(1)});async function l(e){console.log(`收到${e}信号，开始优雅关闭...`),s.info("开始优雅关闭服务器",{signal:e});try{const e=await c;e?(e.close(()=>{console.log("服务器已关闭"),s.info("服务器优雅关闭完成"),process.exit(0)}),setTimeout(()=>{console.log("优雅关闭超时，强制退出"),process.exit(1)},1e4)):process.exit(0)}catch(e){console.error("关闭服务器时发生错误:",e),process.exit(1)}}process.on("SIGTERM",()=>l("SIGTERM")),process.on("SIGINT",()=>l("SIGINT")),process.on("uncaughtException",e=>{console.error("未捕获的异常:",e),process.exit(1)}),process.on("unhandledRejection",(e,t)=>{console.error("未处理的Promise拒绝:",e),process.exit(1)}),e.exports=c}},t={};!function r(a){var n=t[a];if(void 0!==n)return n.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,r),s.exports}(985)})();